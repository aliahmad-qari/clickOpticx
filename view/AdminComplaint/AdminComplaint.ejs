<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Users Complaint</title>
  <!-- plugins:css -->
  <link rel="stylesheet" href="vendors/feather/feather.css">
  <link rel="stylesheet" href="vendors/ti-icons/css/themify-icons.css">
  <link rel="stylesheet" href="vendors/css/vendor.bundle.base.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <!-- Plugin css for this page -->
  <link rel="stylesheet" href="vendors/datatables.net-bs4/dataTables.bootstrap4.css">
  <link rel="stylesheet" type="text/css" href="js/select.dataTables.min.css">
  <!-- inject:css -->
  <link rel="stylesheet" href="css/vertical-layout-light/style.css">
  <!-- endinject -->
  <link rel="shortcut icon" href="images/favicon.png" />
  <!-- Material Design Icons CSS -->
  <link href="https://cdn.jsdelivr.net/npm/@mdi/font@7.2.96/css/materialdesignicons.min.css" rel="stylesheet">
  <!-- Font Awesome for icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <style>
    :root {
      --primary: #6c5ce7;
      --primary-light: #a29bfe;
      --success: #00b894;
      --warning: #fdcb6e;
      --danger: #d63031;
      --dark: #2d3436;
      --light: #f5f6fa;
      --gray: #dfe6e9;
      --card-bg: rgba(255, 255, 255, 0.9);
      --glass-effect: rgba(255, 255, 255, 0.15);
      
      /* Dark theme variables for admin panel */
      --primary-color: #4F46E5;
      --primary-dark: #3730A3;
      --bg-primary: #FFFFFF;
      --bg-secondary: #F8FAFC;
      --bg-tertiary: #F1F5F9;
      --text-primary: #1E293B;
      --text-secondary: #475569;
      --text-tertiary: #64748B;
      --border-primary: #E2E8F0;
      --border-secondary: #CBD5E1;
      --sidebar-bg: #FFFFFF;
    }

    /* Dark Theme Colors for Admin */
    [data-theme="dark"] {
      --bg-primary: #0F172A;
      --bg-secondary: #1E293B;
      --bg-tertiary: #334155;
      --text-primary: #F8FAFC;
      --text-secondary: #CBD5E1;
      --text-tertiary: #94A3B8;
      --border-primary: #334155;
      --border-secondary: #475569;
      --sidebar-bg: #1E293B;
    }

    /* LIGHT MODE - Admin Panel Sidebar Dropdown Fix */
    .sidebar .nav-link,
    .sidebar .nav-link .menu-title,
    .sidebar .nav-link i {
      color: #1E293B !important; /* Dark text for light mode */
    }

    .sidebar .nav.sub-menu .nav-link,
    .sidebar .sub-menu .nav-link {
      color: #475569 !important; /* Darker gray for light mode dropdowns */
      background: transparent !important;
    }

    .sidebar .nav.sub-menu .nav-link:hover,
    .sidebar .sub-menu .nav-link:hover {
      color: #4F46E5 !important; /* Blue on hover */
      background: #F1F5F9 !important; /* Light gray background */
    }

    /* Light mode dropdown menu text colors */
    .sidebar .collapse .nav-link,
    .sidebar .collapsing .nav-link,
    .sidebar .collapse a,
    .sidebar .collapsing a,
    .sidebar .show .nav-link,
    .sidebar .show a {
      color: #475569 !important; /* Dark gray for readability */
      background: transparent !important;
    }

    .sidebar .collapse .nav-link:hover,
    .sidebar .collapsing .nav-link:hover,
    .sidebar .collapse a:hover,
    .sidebar .collapsing a:hover,
    .sidebar .show .nav-link:hover,
    .sidebar .show a:hover {
      color: #4F46E5 !important; /* Blue on hover */
      background: rgba(79, 70, 229, 0.08) !important; /* Light blue background */
    }

    /* Light mode icons in dropdowns */
    .sidebar .collapse i,
    .sidebar .collapsing i,
    .sidebar .show i {
      color: #475569 !important;
    }

    .sidebar .collapse .nav-link:hover i,
    .sidebar .collapsing .nav-link:hover i,
    .sidebar .show .nav-link:hover i {
      color: #4F46E5 !important;
    }

    /* DARK MODE - Admin Panel Sidebar Dropdown Fix */
    [data-theme="dark"] .sidebar .nav-link,
    [data-theme="dark"] .sidebar .nav-link .menu-title,
    [data-theme="dark"] .sidebar .nav-link i {
      color: var(--text-primary) !important; /* Light text for dark mode */
    }

    [data-theme="dark"] .sidebar .nav.sub-menu .nav-link,
    [data-theme="dark"] .sidebar .sub-menu .nav-link {
      color: var(--text-secondary) !important; /* Light gray for dark mode dropdowns */
      background: transparent !important;
    }

    [data-theme="dark"] .sidebar .nav.sub-menu .nav-link:hover,
    [data-theme="dark"] .sidebar .sub-menu .nav-link:hover {
      color: var(--primary-color) !important;
      background: var(--bg-tertiary) !important;
    }

    /* Dark mode dropdown menu text colors */
    [data-theme="dark"] .sidebar .collapse .nav-link,
    [data-theme="dark"] .sidebar .collapsing .nav-link,
    [data-theme="dark"] .sidebar .collapse a,
    [data-theme="dark"] .sidebar .collapsing a,
    [data-theme="dark"] .sidebar .show .nav-link,
    [data-theme="dark"] .sidebar .show a {
      color: var(--text-secondary) !important; /* Light gray: #CBD5E1 */
      background: transparent !important;
    }

    [data-theme="dark"] .sidebar .collapse .nav-link:hover,
    [data-theme="dark"] .sidebar .collapsing .nav-link:hover,
    [data-theme="dark"] .sidebar .collapse a:hover,
    [data-theme="dark"] .sidebar .collapsing a:hover,
    [data-theme="dark"] .sidebar .show .nav-link:hover,
    [data-theme="dark"] .sidebar .show a:hover {
      color: var(--primary-color) !important; /* Blue on hover */
      background: rgba(79, 70, 229, 0.1) !important;
    }

    /* Dark mode icons in dropdowns */
    [data-theme="dark"] .sidebar .collapse i,
    [data-theme="dark"] .sidebar .collapsing i,
    [data-theme="dark"] .sidebar .show i {
      color: var(--text-secondary) !important;
    }

    [data-theme="dark"] .sidebar .collapse .nav-link:hover i,
    [data-theme="dark"] .sidebar .collapsing .nav-link:hover i,
    [data-theme="dark"] .sidebar .show .nav-link:hover i {
      color: var(--primary-color) !important;
    }

    /* DARK MODE - Fix active/selected and hover states */
    [data-theme="dark"] .sidebar .nav-link.active,
    [data-theme="dark"] .sidebar .nav-link.active .menu-title,
    [data-theme="dark"] .sidebar .nav-link.active i,
    [data-theme="dark"] .sidebar .nav-item.active .nav-link,
    [data-theme="dark"] .sidebar .nav-item.active .nav-link .menu-title,
    [data-theme="dark"] .sidebar .nav-item.active .nav-link i {
      color: white !important; /* White text on blue background for active items */
      background: var(--primary-color) !important; /* Blue background for active */
    }

    [data-theme="dark"] .sidebar .nav-link:hover,
    [data-theme="dark"] .sidebar .nav-link:hover .menu-title,
    [data-theme="dark"] .sidebar .nav-link:hover i {
      color: var(--text-primary) !important; /* Light gray on hover, not white */
      background: var(--bg-tertiary) !important; /* Dark gray background */
    }

    /* Override any Bootstrap active states that might be causing white text */
    [data-theme="dark"] .sidebar .nav-link.show,
    [data-theme="dark"] .sidebar .nav-link.show .menu-title,
    [data-theme="dark"] .sidebar .nav-link.show i,
    [data-theme="dark"] .sidebar .nav-link[aria-expanded="true"],
    [data-theme="dark"] .sidebar .nav-link[aria-expanded="true"] .menu-title,
    [data-theme="dark"] .sidebar .nav-link[aria-expanded="true"] i {
      color: var(--text-primary) !important; /* Light text for expanded dropdowns */
      background: transparent !important;
    }

    /* Fix dropdown active/selected states */
    [data-theme="dark"] .sidebar .collapse .nav-link.active,
    [data-theme="dark"] .sidebar .collapse a.active,
    [data-theme="dark"] .sidebar .show .nav-link.active,
    [data-theme="dark"] .sidebar .show a.active {
      color: white !important; /* White text on blue for active dropdown items */
      background: var(--primary-color) !important;
    }

    /* Dropdown hover - make sure it's not white */
    [data-theme="dark"] .sidebar .collapse .nav-link:hover,
    [data-theme="dark"] .sidebar .collapse a:hover,
    [data-theme="dark"] .sidebar .show .nav-link:hover,
    [data-theme="dark"] .sidebar .show a:hover {
      color: var(--text-primary) !important; /* Light gray, not white */
      background: var(--bg-tertiary) !important;
    }

    /* Ensure proper text inheritance for all nested elements */
    .sidebar .collapse *,
    .sidebar .collapsing *,
    .sidebar .show * {
      color: inherit !important;
    }

    [data-theme="dark"] .sidebar .collapse *,
    [data-theme="dark"] .sidebar .collapsing *,
    [data-theme="dark"] .sidebar .show * {
      color: inherit !important;
    }

    /* Override any white text that might be coming from other sources */
    [data-theme="dark"] .sidebar * {
      color: inherit !important;
    }

    [data-theme="dark"] .sidebar .text-white,
    [data-theme="dark"] .sidebar .text-light {
      color: var(--text-primary) !important;
    }

    /* Apply theme to body and main elements */
    [data-theme="dark"] body {
      background-color: var(--bg-secondary) !important;
      color: var(--text-primary) !important;
    }

    [data-theme="dark"] .sidebar {
      background: var(--sidebar-bg) !important;
      color: var(--text-primary) !important;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Poppins', sans-serif;
    }

    body {
      background: var(--light);
      color: var(--dark);
      overflow-x: hidden;
    }

    .container-fluid.page-body-wrapper {
      display: flex;
      flex-direction: row;
    }

    .main-panel {
      width: 100%;
      flex-grow: 1;
      padding: 20px;
      transition: margin-left 0.3s ease;
    }

    @media (max-width: 991px) {
      .main-panel {
        margin-left: 0;
      }
    }

    .card {
      background: #ffffff;
      border-radius: 12px;
      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
      overflow: hidden;
      margin-bottom: 30px;
      animation: slideUp 0.8s ease forwards;
    }

    @keyframes slideUp {
      from {
        opacity: 0;
        transform: translateY(50px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .card-header {
      background: linear-gradient(90deg, var(--primary), var(--primary-light));
      color: white;
      padding: 20px 25px;
      font-size: 1.4rem;
      font-weight: 600;
      display: flex;
      justify-content: center;
      align-items: center;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      position: relative;
      overflow: hidden;
    }

    .card-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      animation: shine 2s infinite;
    }

    @keyframes shine {
      0% {
        left: -100%;
      }

      100% {
        left: 100%;
      }
    }

    .card-body {
      padding: 25px;
    }

    .alert {
      padding: 15px 20px;
      border-radius: 8px;
      margin-bottom: 25px;
      display: flex;
      align-items: center;
      font-size: 0.95rem;
    }

    .alert-success {
      background-color: rgba(52, 168, 83, 0.1);
      color: #155724;
      border-left: 4px solid #34a853;
    }

    .alert-danger {
      background-color: rgba(234, 67, 53, 0.1);
      color: #721c24;
      border-left: 4px solid #ea4335;
    }

    .toolbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
      flex-wrap: wrap;
      gap: 15px;
    }

    .search-box {
      position: relative;
      max-width: 500px;
      flex: 1;
    }

    .search-box i {
      position: absolute;
      left: 15px;
      top: 50%;
      transform: translateY(-50%);
      color: #9e9e9e;
    }

    .search-input {
      width: 100%;
      padding: 12px 15px 12px 45px;
      border: 1px solid #e0e0e0;
      border-radius: 8px;
      font-size: 0.95rem;
      background-color: #f9f9f9;
      transition: all 0.3s ease;
    }

    .search-input:focus {
      outline: none;
      border-color: var(--primary);
      background-color: white;
      box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.1);
    }


    .form-card {
      background: var(--card-bg);
      border-radius: 20px;
      padding: 40px;
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.3);
      animation: slideUp 0.8s ease forwards;
      max-width: 700px;
      margin: 0 auto;
    }

    .form-header {
      background: linear-gradient(90deg, var(--primary), var(--primary-light));
      color: white;
      padding: 12px;
      border-radius: 15px;
      text-align: center;
      margin-bottom: 30px;
      font-size: 1.5rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 8px;
      font-weight: 600;
      position: relative;
      overflow: hidden;
    }

    .form-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      animation: shine 2s infinite;
    }

    @media (max-width: 576px) {
      .form-header {
        font-size: 1.2rem;
        justify-content: center;
        text-align: center;
      }
    }

    .form-group {
      position: relative;
      margin-bottom: 30px;
    }

    .form-control,
    .form-select {
      width: 100%;
      border: none;
      border-bottom: 2px solid var(--gray);
      background: transparent;
      padding: 12px 0;
      font-size: 1rem;
      color: var(--dark);
      transition: all 0.3s ease;
    }

    .form-control:focus,
    .form-select:focus {
      border-bottom-color: var(--primary);
      outline: none;
    }

    .form-label {
      position: absolute;
      top: 12px;
      left: 0;
      font-weight: 500;
      color: black;
      pointer-events: none;
      transition: all 0.3s ease;
    }

    .form-control:focus~.form-label,
    .form-control:not(:placeholder-shown)~.form-label,
    .form-select:focus~.form-label,
    .form-select:not([value=""])~.form-label {
      top: -20px;
      left: 0;
      font-size: 0.85rem;
      color: var(--primary);
    }

    .form-control:focus~.form-label::after,
    .form-control:not(:placeholder-shown)~.form-label::after,
    .form-select:focus~.form-label::after,
    .form-select:not([value=""])~.form-label::after {
      content: '*';
      color: var(--danger);
      margin-left: 5px;
    }

    .form-select option {
      background: var(--light);
      color: var(--dark);
    }

    .btn-primary {
      background: linear-gradient(90deg, var(--primary), var(--primary-light));
      border: none;
      padding: 15px;
      border-radius: 50px;
      font-weight: 600;
      color: white;
      width: 100%;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .btn-primary:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 20px rgba(108, 92, 231, 0.3);
    }

    .btn-primary::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      animation: shine 2s infinite;
    }

    .error-message {
      color: var(--danger);
      font-size: 0.85rem;
      margin-top: 5px;
      display: none;
    }

    .input-error .error-message {
      display: block;
    }

    .input-error .form-control,
    .input-error .form-select {
      border-bottom-color: var(--danger);
    }

    .form-icon {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      color: var(--gray);
      transition: color 0.3s ease;
    }

    .form-control:focus~.form-icon,
    .form-select:focus~.form-icon {
      color: var(--primary);
    }

    .table-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 20px;
      padding: 15px 10px;
      font-size: 0.9rem;
      color: #5f6368;
    }

    .showing-entries {
      color: #5f6368;
    }

    .pagination {
      display: flex;
      gap: 5px;
    }

    .page-btn {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      border: 1px solid #e0e0e0;
      background-color: white;
      color: #5f6368;
      cursor: pointer;
      transition: all 0.2s ease;
      text-decoration: none;
    }

    .page-btn:hover {
      background-color: #f1f3f4;
    }

    .page-btn.active {
      background-color: #1a73e8;
      color: white;
      border-color: #1a73e8;
    }

    .page-btn.disabled {
      opacity: 0.5;
      cursor: not-allowed;
      pointer-events: none;
    }

    /* Modal */

    /* Modal Styles */
    .modal {
      z-index: 1055;
    }

    .modal-backdrop {
      z-index: 1050;
      background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-backdrop.show {
      opacity: 0.5;
    }






    .modal-close-btn {
      /* position: absolute; */
      /* top: -9px; */
      /* right: 161px; */
      z-index: 1060;
      font-size: 30px;
      color: white;
      background: none;
      border: none;
      cursor: pointer;
    }

    /* Progress Tracking Styles */
    .progress-tracking {
      margin-bottom: 30px;
      background: white;
      border-radius: 12px;
      padding: 25px;
      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
    }

    .progress-header {
      text-align: center;
      margin-bottom: 25px;
    }

    .progress-title {
      font-size: 1.5rem;
      font-weight: 600;
      color: var(--primary);
      margin-bottom: 10px;
    }

    .progress-subtitle {
      color: #6c757d;
      font-size: 0.95rem;
    }

    .progress-stats {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }

    .progress-stat-card {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      border-radius: 12px;
      padding: 20px;
      color: white;
      position: relative;
      overflow: hidden;
    }

    .progress-stat-card.pending {
      background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    }

    .progress-stat-card.progress {
      background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    }

    .progress-stat-card.complete {
      background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
    }

    .progress-stat-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      animation: cardShine 3s infinite;
    }

    @keyframes cardShine {
      0% {
        left: -100%;
      }

      100% {
        left: 100%;
      }
    }

    .stat-icon {
      font-size: 2.5rem;
      margin-bottom: 10px;
      opacity: 0.8;
    }

    .stat-number {
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 5px;
    }

    .stat-label {
      font-size: 0.9rem;
      opacity: 0.9;
      margin-bottom: 10px;
    }

    .stat-percentage {
      font-size: 0.85rem;
      opacity: 0.8;
    }

    .overall-progress {
      background: #f8f9fa;
      border-radius: 12px;
      padding: 25px;
      margin-bottom: 20px;
    }

    .overall-progress-title {
      font-size: 1.2rem;
      font-weight: 600;
      color: var(--dark);
      margin-bottom: 15px;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .progress-bar-container {
      background: #e9ecef;
      border-radius: 50px;
      height: 12px;
      overflow: hidden;
      margin-bottom: 10px;
      position: relative;
    }

    .progress-bar {
      height: 100%;
      background: linear-gradient(90deg, #667eea, #764ba2);
      border-radius: 50px;
      transition: width 1s ease-in-out;
      position: relative;
      overflow: hidden;
    }

    .progress-bar::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
      animation: progressShine 2s infinite;
    }

    @keyframes progressShine {
      0% {
        left: -100%;
      }

      100% {
        left: 100%;
      }
    }

    .progress-percentage {
      font-weight: 600;
      color: var(--primary);
      font-size: 1.1rem;
    }

    .status-progress-bar {
      margin-top: 8px;
    }

    .status-progress-container {
      background: #f8f9fa;
      border-radius: 6px;
      height: 6px;
      overflow: hidden;
    }

    .status-progress-fill {
      height: 100%;
      border-radius: 6px;
      transition: width 0.8s ease-in-out;
    }

    .status-progress-fill.pending {
      background: linear-gradient(90deg, #f093fb, #f5576c);
      width: 33%;
    }

    .status-progress-fill.progress {
      background: linear-gradient(90deg, #4facfe, #00f2fe);
      width: 66%;
    }

    .status-progress-fill.complete {
      background: linear-gradient(90deg, #43e97b, #38f9d7);
      width: 100%;
    }

    .complaint-row {
      position: relative;
    }

    

    .complaint-row td:first-child {
      padding-left: 12px;
      position: relative;
    }

    .complaint-row.pending::before {
      background: linear-gradient(135deg, #f093fb, #f5576c);
    }

    .complaint-row.progress::before {
      background: linear-gradient(135deg, #4facfe, #00f2fe);
    }

    .complaint-row.complete::before {
      background: linear-gradient(135deg, #43e97b, #38f9d7);
    }

    .priority-indicator {
      display: inline-block;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      margin-right: 8px;
      animation: pulse 2s infinite;
    }

    .priority-high {
      background: #dc3545;
    }

    .priority-medium {
      background: #ffc107;
    }

    .priority-low {
      background: #28a745;
    }

    @keyframes pulse {

      0%,
      100% {
        opacity: 1;
      }

      50% {
        opacity: 0.5;
      }
    }

    .time-tracker {
      font-size: 0.8rem;
      color: #6c757d;
      margin-top: 4px;
    }

    .resolution-time {
      background: #e3f2fd;
      color: #1976d2;
      padding: 2px 8px;
      border-radius: 12px;
      font-size: 0.75rem;
      font-weight: 500;
    }

    /* Mobile Responsive Styles */
    @media (max-width: 768px) {
      .main-panel {
        padding: 10px;
      }

      .card-body {
        padding: 15px;
      }

      .toolbar {
        flex-direction: column;
        gap: 10px;
        align-items: stretch;
      }

      .search-box {
        max-width: 100%;
      }

      .d-flex.align-items-center.gap-2.ms-3 {
        margin-left: 0 !important;
        flex-wrap: wrap;
        gap: 10px;
        width: 100%;
      }

      .form-select-sm {
        width: 100%;
        min-width: 150px;
      }

      .btn-group {
        flex-wrap: wrap;
      }

      .btn-group .btn {
        font-size: 0.8rem;
        padding: 4px 8px;
      }

      /* Mobile Table Styles */






      /* Progress stats mobile */

      .progress-stat-card {
        padding: 15px;
      }

      .stat-number {
        font-size: 1.5rem;
      }

      .stat-icon {
        font-size: 2rem;
      }

      /* Modal mobile adjustments */
      .modal-dialog {
        margin: 10px;
        max-width: calc(100% - 20px);
      }

      .form-card {
        padding: 20px;
      }

      .form-header {
        font-size: 18px;
        padding: 10px;
      }

      .d-flex.gap-4 {
        flex-direction: column;
        gap: 0 !important;
      }

      .d-flex.gap-4 .form-group {
        margin-bottom: 20px;
      }

      .table-footer {
        flex-direction: column;
        gap: 10px;
        text-align: center;
      }

      .pagination {
        justify-content: center;
      }
    }

    @media (max-width: 480px) {
      .main-panel {
        padding: 5px;
      }

      .card-header {
        font-size: 1.1rem;
        padding: 15px;
      }

      .btn-group .btn {
        font-size: 0.7rem;
        padding: 3px 6px;
      }



      .progress-stat-card {
        padding: 12px;
      }

      .stat-number {
        font-size: 1.3rem;
      }

      .stat-icon {
        font-size: 1.8rem;
      }

      .form-card {
        padding: 15px;
        margin: 5px;
      }

      .search-input {
        padding: 10px 10px 10px 35px;
        font-size: 0.9rem;
      }


    }

    /* Modal */
  </style>
</head>

<body>
  <div class="container-scroller">
    <%- include ('../partials/_navbar.ejs') %>
      <div class="container-fluid page-body-wrapper">
        <%- include ('../partials/SettingsDow.ejs') %>
          <%- include ('../partials/Sidebar.ejs') %>
            <div class="main-panel">
              <% if (messages.success) { %>
                <div class="position-relative" style="z-index: 1055;">
                  <div class="d-flex justify-content-end position-absolute w-100"
                    style="top: 10px; right: 0; z-index: 1055;">
                    <div id="pusher-message-box" class="alert alert-success alert-dismissible fade show mt-3"
                      role="alert" style="color: white;">
                      <strong>Success:</strong>
                      <%= messages.success %>
                    </div>
                  </div>
                </div>
                <% } %>
                  <div class="content-wrapper">
                    <!-- Progress Tracking Dashboard -->
                    <div class="progress-tracking">
                      <div class="progress-header">
                        <h2 class="progress-title">
                          <i class="fas fa-chart-line"></i> Complaint Resolution Progress
                        </h2>
                        <p class="progress-subtitle">Track and monitor complaint resolution efficiency</p>
                      </div>

                      <!-- Progress Statistics Cards -->
                      <% 
                        // Calculate counts once at the top 
                        const pendingCount = user.filter(u => u.status && u.status.toLowerCase() === 'pending').length;
                        const progressCount = user.filter(u => u.status && u.status.toLowerCase() === 'progress').length;
                        const completeCount = user.filter(u => u.status && u.status.toLowerCase() === 'complete').length;
                      %>
                        <div class="progress-stats">
                          <div class="progress-stat-card pending">
                            <div class="stat-icon">
                              <i class="fas fa-clock"></i>
                            </div>
                            <div class="stat-number" id="pending-count" data-server-value="<%= pendingCount %>">
                              <%= pendingCount %>
                            </div>
                            <div class="stat-label">Pending Complaints</div>
                            <div class="stat-percentage" id="pending-percentage">
                              <%= user.length> 0 ? Math.round((pendingCount / user.length) * 100) : 0 %>% of total
                            </div>
                          </div>

                          <div class="progress-stat-card progress">
                            <div class="stat-icon">
                              <i class="fas fa-cogs"></i>
                            </div>
                            <div class="stat-number" id="progress-count" data-server-value="<%= progressCount %>">
                              <%= progressCount %>
                            </div>
                            <div class="stat-label">In Progress</div>
                            <div class="stat-percentage" id="progress-percentage">
                              <%= user.length> 0 ? Math.round((progressCount / user.length) * 100) : 0 %>% of total
                            </div>
                          </div>

                          <div class="progress-stat-card complete">
                            <div class="stat-icon">
                              <i class="fas fa-check-circle"></i>
                            </div>
                            <div class="stat-number" id="complete-count" data-server-value="<%= completeCount %>">
                              <%= completeCount %>
                            </div>
                            <div class="stat-label">Completed</div>
                            <div class="stat-percentage" id="complete-percentage">
                              <%= user.length> 0 ? Math.round((completeCount / user.length) * 100) : 0 %>% of total
                            </div>
                          </div>
                        </div>

                        <!-- Overall Progress Bar -->
                        <div class="overall-progress">
                          <div class="overall-progress-title">
                            <i class="fas fa-chart-bar"></i>
                            Overall Resolution Rate
                            <span class="progress-percentage" id="overall-percentage">
                              <%= user.length> 0 ? Math.round((completeCount / user.length) * 100) : 0 %>%
                            </span>
                          </div>
                          <div class="progress-bar-container">
                            <div class="progress-bar"
                              style="width: <%= user.length > 0 ? Math.round((completeCount / user.length) * 100) : 0 %>%">
                            </div>
                          </div>
                          <div class="d-flex justify-content-between text-small">
                            <span>0%</span>
                            <span>Target: 85%</span>
                            <span>100%</span>
                          </div>
                        </div>
                    </div>

                    <div class="card">
                      <div class="card-header"> Users Complaint
                        <div class="header-actions"></div>
                      </div>
                      <div class="card-body">
                        <div class="toolbar">
                          <!-- 🔍 Search Box -->
                          <div class="search-box flex-grow-1">
                            <i class="fas fa-search"></i>
                            <form class="d-flex w-100" id="search-form" onsubmit="return false;">
                              <input class="search-input" type="search" id="search-input"
                                placeholder="Search by Username, Complaint Type, Number, Address, Complaint, or Status">
                            </form>
                          </div>

                          <!-- 🏷️ Quick Filters -->
                          <div class="d-flex align-items-center gap-2 ms-3">
                            <!-- Status Filters -->
                            <div class="btn-group" role="group">
                              <button type="button" class="btn btn-sm btn-outline-primary"
                                onclick="filterByStatus('all')" title="Show All (Ctrl+0)">
                                <i class="fas fa-list"></i> All
                              </button>
                              <button type="button" class="btn btn-sm btn-outline-warning"
                                onclick="filterByStatus('pending')" title="Pending Only (Ctrl+1)">
                                <i class="fas fa-clock"></i> Pending
                              </button>
                              <button type="button" class="btn btn-sm btn-outline-info"
                                onclick="filterByStatus('progress')" title="In Progress (Ctrl+2)">
                                <i class="fas fa-cogs"></i> Progress
                              </button>
                              <button type="button" class="btn btn-sm btn-outline-success"
                                onclick="filterByStatus('complete')" title="Completed (Ctrl+3)">
                                <i class="fas fa-check-circle"></i> Complete
                              </button>
                            </div>

                            <!-- Priority Filters -->
                            <div class="btn-group ms-2" role="group">
                              <button type="button" class="btn btn-sm btn-outline-danger"
                                onclick="filterByPriority('high')" title="High Priority">
                                <i class="fas fa-exclamation-triangle"></i> High
                              </button>
                              <button type="button" class="btn btn-sm btn-outline-warning"
                                onclick="filterByPriority('medium')" title="Medium Priority">
                                <i class="fas fa-minus-circle"></i> Medium
                              </button>
                              <button type="button" class="btn btn-sm btn-outline-success"
                                onclick="filterByPriority('low')" title="Low Priority">
                                <i class="fas fa-check-circle"></i> Low
                              </button>
                            </div>

                            <!-- Department Filter -->
                            <form method="GET" action="/UserComplaint" class="d-flex align-items-center ms-2">
                              <select name="department" onchange="this.form.submit()"
                                class="form-select form-select-sm">
                                <option value="">All Departments</option>
                                <option value="Billing" <%=selectedDepartment==='Billing' ? 'selected' : '' %>>Billing
                                </option>
                                <option value="Sales" <%=selectedDepartment==='Sales' ? 'selected' : '' %>>Sales
                                </option>
                                <option value="Support" <%=selectedDepartment==='Support' ? 'selected' : '' %>>Support
                                </option>
                              </select>
                            </form>
                          </div>
                        </div>

                      </div>

                      <!-- table -->

                      <div class="complaint-table-container">
  <table class="equipment-table">
    <thead>
      <tr>
        <th>Username</th>
        <th>Complaint Type</th>
        <th>Number</th>
        <th>Address</th>
        <th>Complaint</th>
        <th>Status & Progress</th>
        <th>Priority</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody id="complaint-table">
      <% if (user.length > 0) { %>
        <% user.forEach((complaint, index) => { %>
          <tr class="complaint-row <%= complaint.status.toLowerCase() %>">
            <td data-label="Username">
              <strong><%= complaint.Username %></strong>
              <div class="time-tracker">
                <% 
                  const createdDate = complaint.created_at ? new Date(complaint.created_at) : new Date();
                  const daysSince = Math.floor((new Date() - createdDate) / (1000 * 60 * 60 * 24));
                %>
                <i class="fas fa-clock"></i> <%= daysSince %> days ago
              </div>
            </td>
            <td data-label="Department">
              <span class="category-badge"><%= complaint.department %></span>
            </td>
            <td data-label="Number"><%= complaint.number %></td>
            <td data-label="Address"><%= complaint.Address %></td>
            <td data-label="Complaint">
              <%= complaint.Complaint.length > 50 
                    ? complaint.Complaint.substring(0, 50) + '...' 
                    : complaint.Complaint 
              %>
            </td>
            <td data-label="Status & Progress">
              <div>
                <span class="status-badge status-<%= complaint.status.toLowerCase() %>">
                  <% if (complaint.status === 'Pending') { %>
                    <i class="fas fa-clock"></i>
                  <% } else if (complaint.status === 'Progress') { %>
                    <i class="fas fa-cogs"></i>
                  <% } else if (complaint.status === 'Complete') { %>
                    <i class="fas fa-check-circle"></i>
                  <% } %>
                  <%= complaint.status %>
                </span>
                <div class="status-progress-bar">
                  <div class="status-progress-container">
                    <div class="status-progress-fill <%= complaint.status.toLowerCase() %>"></div>
                  </div>
                </div>
              </div>
            </td>
            <td data-label="Priority">
              <% 
                let priority = 'low';
                let priorityText = 'Low';
                if (daysSince > 7) {
                  priority = 'high';
                  priorityText = 'High';
                } else if (daysSince > 3) {
                  priority = 'medium';
                  priorityText = 'Medium';
                }
              %>
              <span class="priority-indicator priority-<%= priority %>"></span>
              <span class="resolution-time"><%= priorityText %></span>
            </td>
            <td data-label="Action" class="action-buttons">
              <button type="button" class="btn-action" data-toggle="modal"
                data-target="#myModal<%= complaint.id %>">
                <i class="fas fa-edit text-success"></i>
              </button>
              <form action="/UserComplaint/<%= complaint.id %>?_method=DELETE" method="POST">
                <input type="hidden" name="_method" value="DELETE">
                <button type="submit" class="btn-action" title="Delete">
                  <i class="ti-trash" style="color:red;"></i>
                </button>
              </form>
            </td>
          </tr>
        <% }); %>
      <% } else { %>
        <tr class="no-data">
          <td colspan="8">No complaints found.</td>
        </tr>
      <% } %>
    </tbody>
  </table>
</div>







                      <div class="table-footer">
                        <div class="showing-entries">Showing <span id="entry-count">
                            <%= user.length %>
                          </span> entries</div>
                        <div class="pagination">
                          <a class="page-btn disabled" href="#">«</a>
                          <a class="page-btn active" href="#">1</a>
                          <a class="page-btn" href="#">2</a>
                          <a class="page-btn" href="#">»</a>
                        </div>
                      </div>
                    </div>
                  </div>
            </div>

            <!-- Edit Equipment Modal -->
            <div class="modal fade" id="editEquipmentModal" tabindex="-1" aria-labelledby="editEquipmentModalLabel"
              aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content form-card">
                  <div class="form-header">
                    <h5 class="modal-title" id="editEquipmentModalLabel">Edit Equipment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">
                    <form action="/updateEquipment" method="POST" enctype="multipart/form-data">
                      <input type="hidden" name="id" id="edit-id">
                      <div class="form-group">
                        <select name="type" id="edit-type" class="form-select" required>
                          <option value="fibre">Fibre</option>
                          <option value="wireless">Wireless</option>
                        </select>
                        <label for="edit-type" class="form-label">Type</label>
                        <i class="fas fa-chevron-down form-icon"></i>
                      </div>
                      <div class="form-group">
                        <input type="text" name="name" id="edit-name" class="form-control" placeholder=" " required>
                        <label for="edit-name" class="form-label">Equipment Name</label>
                        <i class="fas fa-tag form-icon"></i>
                      </div>
                      <div class="form-group">
                        <input type="text" name="quantity" id="edit-quantity" class="form-control" placeholder=" "
                          required>
                        <label for="edit-quantity" class="form-label">Quantity</label>
                        <i class="fas fa-box form-icon"></i>
                      </div>
                      <div class="form-group">
                        <input type="text" name="category" id="edit-category" class="form-control" placeholder=" "
                          readonly>
                        <label for="edit-category" class="form-label">Category</label>
                        <i class="fas fa-list form-icon"></i>
                      </div>
                      <div class="form-group">
                        <label for="edit-image" class="form-label">Image (optional)</label>
                        <input type="file" name="image" id="edit-image" class="form-file" accept="image/*">
                        <div id="current-image-container" class="mt-2">
                          <img id="current-image" class="equipment-image" alt="Current Equipment Image">
                        </div>
                      </div>
                      <button type="submit" class="btn-primary">
                        <i class="fas fa-save mr-2"></i> Update Equipment
                      </button>
                    </form>
                  </div>
                </div>
              </div>
            </div>
            <!-- Edit Equipment Modal -->
            <!-- Update Modal -->
            <% user.forEach(complaint=> { %>
              <div class="modal fade" id="myModal<%= complaint.id %>" tabindex="-1" aria-labelledby="myModalLabel"
                aria-hidden="true" style="padding-left: 0% !important; padding-right: 0% !important;">
                <div class="modal-dialog modal-lg modal-dialog-centered">
                  <div class="modal-content p-4"
                    style="background-color: #e9ecef00 !important; border: none; padding: 0% !important;">
                    <div class="main-panel position-relative" style="padding: 0% !important;">
                      <!-- Modal Body -->
                      <div class="content-wrapper">
                        <div class="form-card" style="margin-top: -39px;">
                          <div class="form-header">
                            <div style="display:flex; align-items:center;justify-content:center;gap:10px;">
                              <i class="bi bi-bookmark-star-fill"></i>
                              <h3>Update Complaint</h3>
                            </div>
                            <!-- Close Icon -->
                            <button type="button" class="modal-close-btn" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                          </div>
                          <form action="/UserComplaint/update/<%= complaint.id %>" method="POST">
                            <div class="d-flex gap-4 mb-3">
                              <div class="form-group w-100">
                                <input type="text" name="Username" id="Username" class="form-control"
                                  value="<%= complaint.Username %>">
                                <label for="Username" class="form-label">Your Name</label>
                              </div>
                              <div class="form-group w-100">
                                <input type="number" name="number" id="number" class="form-control"
                                  value="<%= complaint.number %>">
                                <label for="number" class="form-label">Number</label>
                              </div>
                            </div>
                            <div class="row">
                              <div class="form-group col-md-6">
                                <label for="teamName">Team Name:</label>
                                <input type="text" class="form-control" id="teamName" name="teamName"
                                  value="<%= complaint.teamName || '' %>">
                              </div>
                              <div class="form-group col-md-6">
                                <label for="equipment">Equipment:</label>
                                <input type="text" class="form-control" id="equipment" name="equipment"
                                  value="<%= complaint.equipment || '' %>">
                              </div>
                            </div>
                            <div class="d-flex gap-4 mb-3">
                              <div class="form-group w-100">
                                <select id="status" name="status" class="form-select" required>
                                  <option value="" disabled selected>Status:</option>
                                  <option value="Pending" <%=complaint.status==="Pending" ? "selected" : "" %>>Pending
                                  </option>
                                  <option value="Progress" <%=complaint.status==="Progress" ? "selected" : "" %>
                                    >Progress</option>
                                  <option value="Complete" <%=complaint.status==="Complete" ? "selected" : "" %>
                                    >Complete</option>
                                </select>
                                <label for="status" class="form-label">Status</label>
                              </div>
                              <div class="form-group w-100">
                                <input type="text" name="Address" id="Address" class="form-control"
                                  value="<%= complaint.Address %>">
                                <label for="Address" class="form-label">Address</label>
                              </div>
                            </div>
                            <div class="form-group mb-4" style="border: 1px solid #272626; border-radius: 4px;">
                              <textarea name="Complaint" id="Complaint" class="form-control"
                                placeholder=" "><%= complaint.Complaint %></textarea>
                              <label for="Complaint" class="form-label">Complaint</label>
                            </div>
                            <div class="mt-4">
                              <button type="submit" class="btn btn-success">
                                <i class="bi bi-check2-circle"></i> Update
                              </button>
                            </div>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <% }); %>
      </div>
  </div>
  </div>

 <style>
  /* --- Table Container --- */
.complaint-table-container {
  overflow-x: auto;
  border-radius: 10px;
  background: #fff;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  border: 1px solid #ddd;
  padding: 0;
}

/* --- Base Table Styles --- */
.equipment-table {
  width: 100%;
  border-collapse: collapse;
  table-layout: fixed;
  background: #fff;
}

.equipment-table th,
.equipment-table td {
 
  padding: 14px 12px;
  text-align: left;
  vertical-align: middle;
  word-wrap: break-word;
}

/* Header Styles */
.equipment-table th {
  background-color: #f5f8ff;
  color: var(--primary, #1a73e8);
  font-weight: 600;
}

/* Row Hover */
.equipment-table tbody tr:hover {
  background-color: #f9fbff;
}

/* Column Widths */
.equipment-table th:nth-child(1),
.equipment-table td:nth-child(1) { width: 14%; }
.equipment-table th:nth-child(2),
.equipment-table td:nth-child(2) { width: 11%; }
.equipment-table th:nth-child(3),
.equipment-table td:nth-child(3) { width: 10%; }
.equipment-table th:nth-child(4),
.equipment-table td:nth-child(4) { width: 13%; }
.equipment-table th:nth-child(5),
.equipment-table td:nth-child(5) { width: 12%; }
.equipment-table th:nth-child(6),
.equipment-table td:nth-child(6) { width: 12%; }
.equipment-table th:nth-child(7),
.equipment-table td:nth-child(7) { width: 8%; }
.equipment-table th:nth-child(8),
.equipment-table td:nth-child(8) { width: 9%; }

/* --- Category Badge --- */
.category-badge {
  display: inline-block;
  padding: 5px 12px;
  border-radius: 20px;
  font-size: 0.85rem;
  background-color: #e8f0fe;
  color: #1a73e8;
  font-weight: 500;
}

/* --- Status Badge --- */
.status-badge {
  display: inline-flex;
  align-items: center;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 0.85rem;
  font-weight: 500;
  white-space: nowrap;
}
.status-pending { background: rgba(249, 171, 0, 0.1); color: #f9ab00; }
.status-progress { background: rgba(26, 115, 232, 0.1); color: #1a73e8; }
.status-complete { background: rgba(52, 168, 83, 0.1); color: #34a853; }

/* --- Progress Bar --- */
.status-progress-bar {
  margin-top: 5px;
}
.status-progress-container {
  height: 5px;
  width: 100%;
  background: #eee;
  border-radius: 5px;
  overflow: hidden;
}
.status-progress-fill {
  height: 100%;
  width: 100%;
}
.status-progress-fill.pending { width: 30%; background: #f9ab00; }
.status-progress-fill.progress { width: 60%; background: #1a73e8; }
.status-progress-fill.complete { width: 100%; background: #34a853; }

/* --- Priority Indicator --- */
.priority-indicator {
  display: inline-block;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  margin-right: 5px;
}
.priority-low { background: #34a853; }
.priority-medium { background: #f9ab00; }
.priority-high { background: #ea4335; }
.resolution-time {
  font-size: 0.85rem;
  font-weight: 500;
}

/* --- Action Buttons --- */

.btn-action {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  background: transparent;
  color: #5f6368;
  cursor: pointer;
  transition: all 0.2s ease;
}
.btn-action:hover { background: #f1f3f4; color: var(--primary, #1a73e8); }
.action-buttons form {
  display: inline-flex; /* ensures the form is inline within flex */
  margin: 0; /* remove default spacing */
  padding: 0;
}
.action-buttons button {
  display: inline-flex;
}


/* --- Time Tracker --- */
.time-tracker {
  font-size: 0.8rem;
  color: #6b6b6b;
  display: flex;
  align-items: center;
  gap: 4px;
}

/* --- Responsive Card Layout (≤1024px) --- */
@media (max-width: 1024px) {
  .complaint-table-container {
    overflow: hidden;
    border: none;
    background: transparent;
    box-shadow: none;
    width: 100%;
    max-width: 100%;
  }
  .equipment-table {
    display: block;
    width: 100%;
    max-width: 100%;
  }
  .equipment-table thead { display: none; }
  .equipment-table tbody { 
    display: flex; 
    flex-direction: column; 
    gap: 20px; 
    width: 100%;
    max-width: 100%;
  }
  .equipment-table tr {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    background: #fff;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    padding: 15px;
    transition: 0.2s ease;
    width: 100%;
    max-width: 100%;
    overflow: hidden;
  }
  .equipment-table tr:hover { transform: translateY(-2px); box-shadow: 0 4px 12px rgba(0,0,0,0.15); }
  .equipment-table td {
    flex: 1 1 45%;
    margin-bottom: 10px;
    padding: 8px 0;
    border: none;
    text-align: left;
    word-wrap: break-word;
    overflow-wrap: break-word;
    max-width: 100%;
  }
  .equipment-table td:before {
    content: attr(data-label);
    font-weight: 600;
    color: var(--primary, #1a73e8);
    display: block;
    margin-bottom: 4px;
    font-size: 0.85rem;
  }
  .action-buttons { width: 100%; justify-content: flex-end; margin-top: 10px; }
}

/* --- Full Column Layout (≤768px) --- */
@media (max-width: 768px) {
  .equipment-table tr { 
    flex-direction: column; 
    align-items: flex-start; 
    width: 100%;
    max-width: 100%;
  }
  .equipment-table td { 
    width: 100%; 
    max-width: 100%;
    word-break: break-word;
  }
  .action-buttons { 
    justify-content: flex-end; 
    width: 100%; 
    margin-top: 15px; 
    flex-wrap: wrap;
    gap: 5px;
  }
  .category-badge, .status-badge { 
    font-size: 0.75rem; 
    padding: 4px 8px; 
    word-break: normal;
  }
  .time-tracker { 
    font-size: 0.7rem; 
    margin-top: 2px; 
  }
  .main-panel {
    padding: 10px;
    width: 100%;
    max-width: 100%;
  }
}

 </style>

  <!-- plugins:js -->
  <script src="vendors/js/vendor.bundle.base.js"></script>
  <!-- Plugin js for this page -->
  <script src="vendors/chart.js/Chart.min.js"></script>
  <script src="vendors/datatables.net/jquery.dataTables.js"></script>
  <script src="vendors/datatables.net-bs4/dataTables.bootstrap4.js"></script>
  <script src="js/dataTables.select.min.js"></script>
  <!-- inject:js -->
  <script src="js/off-canvas.js"></script>
  <script src="js/hoverable-collapse.js"></script>
  <script src="js/template.js"></script>
  <script src="js/settings.js"></script>
  <!-- Custom js for this page-->
  <script src="js/dashboard.js"></script>
  <script src="js/Chart.roundedBarCharts.js"></script>
  <!-- Bootstrap 3 and jQuery -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
  <script src="http://netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
  <script>
    // Message box fade-out
    window.addEventListener('DOMContentLoaded', () => {
      const msgBox = document.getElementById('pusher-message-box');
      if (msgBox) {
        setTimeout(() => {
          msgBox.style.transition = "opacity 0.5s";
          msgBox.style.opacity = 0;
          setTimeout(() => msgBox.style.display = "none", 500);
        }, 4000);
      }
    });

    // Progress tracking and real-time updates
    function updateProgressStats() {
      const rows = document.querySelectorAll('#complaint-table tr:not(.no-data)');
      const visibleRows = Array.from(rows).filter(row => row.style.display !== 'none');

      let pendingCount = 0;
      let progressCount = 0;
      let completeCount = 0;
      const totalCount = visibleRows.length;

      visibleRows.forEach(row => {
        // Check for both exact class names and status text
        const statusText = row.cells[5] ? row.cells[5].textContent.toLowerCase().trim() : '';

        if (row.classList.contains('pending') || statusText.includes('pending')) {
          pendingCount++;
        } else if (row.classList.contains('progress') || statusText.includes('progress')) {
          progressCount++;
        } else if (row.classList.contains('complete') || statusText.includes('complete')) {
          completeCount++;
        }

      });

      // Debug summary (can be removed in production)
      const serverCounts = {
        pending: parseInt(document.getElementById('pending-count')?.dataset?.serverValue || '0'),
        progress: parseInt(document.getElementById('progress-count')?.dataset?.serverValue || '0'),
        complete: parseInt(document.getElementById('complete-count')?.dataset?.serverValue || '0')
      };

      console.log('Progress Stats Update:', {
        clientSide: { totalRows: totalCount, pending: pendingCount, progress: progressCount, complete: completeCount },
        serverSide: serverCounts,
        matches: {
          pending: pendingCount === serverCounts.pending,
          progress: progressCount === serverCounts.progress,
          complete: completeCount === serverCounts.complete
        }
      });

      // Update stat cards
      document.getElementById('pending-count').textContent = pendingCount;
      document.getElementById('progress-count').textContent = progressCount;
      document.getElementById('complete-count').textContent = completeCount;

      // Update percentages
      const pendingPercentage = totalCount > 0 ? Math.round((pendingCount / totalCount) * 100) : 0;
      const progressPercentage = totalCount > 0 ? Math.round((progressCount / totalCount) * 100) : 0;
      const completePercentage = totalCount > 0 ? Math.round((completeCount / totalCount) * 100) : 0;

      document.getElementById('pending-percentage').textContent = `${pendingPercentage}% of total`;
      document.getElementById('progress-percentage').textContent = `${progressPercentage}% of total`;
      document.getElementById('complete-percentage').textContent = `${completePercentage}% of total`;

      // Update overall progress
      document.getElementById('overall-percentage').textContent = `${completePercentage}%`;
      const progressBar = document.querySelector('.progress-bar');
      if (progressBar) {
        progressBar.style.width = `${completePercentage}%`;
      }
    }

    // Enhanced search functionality with progress tracking
    document.getElementById('search-input').addEventListener('input', function (e) {
      const searchTerm = e.target.value.toLowerCase();
      const rows = document.querySelectorAll('#complaint-table tr:not(.no-data)');
      let visibleCount = 0;

      rows.forEach(row => {
        const username = row.cells[0].textContent.toLowerCase();
        const complaintType = row.cells[1].textContent.toLowerCase();
        const number = row.cells[2].textContent.toLowerCase();
        const address = row.cells[3].textContent.toLowerCase();
        const complaint = row.cells[4].textContent.toLowerCase();
        const status = row.cells[5].textContent.toLowerCase();
        const priority = row.cells[6].textContent.toLowerCase();

        const matches = username.includes(searchTerm) ||
          complaintType.includes(searchTerm) ||
          number.includes(searchTerm) ||
          address.includes(searchTerm) ||
          complaint.includes(searchTerm) ||
          status.includes(searchTerm) ||
          priority.includes(searchTerm);

        row.style.display = matches ? '' : 'none';
        if (matches) visibleCount++;
      });

      const noDataRow = document.querySelector('#complaint-table tr.no-data');
      if (noDataRow) {
        noDataRow.style.display = visibleCount === 0 && rows.length === 0 ? '' : 'none';
      }

      document.getElementById('entry-count').textContent = visibleCount;

      // Update progress stats based on visible rows
      updateProgressStats();
    });

    // Auto-refresh progress tracking every 30 seconds
    setInterval(updateProgressStats, 30000);

    // Initialize progress tracking on page load
    document.addEventListener('DOMContentLoaded', function () {
      updateProgressStats();

      // Add smooth animations to progress bars
      setTimeout(() => {
        const progressBars = document.querySelectorAll('.status-progress-fill');
        progressBars.forEach(bar => {
          bar.style.opacity = '1';
        });
      }, 500);
    });

    // Priority filter functionality
    function filterByPriority(priority) {
      const rows = document.querySelectorAll('#complaint-table tr:not(.no-data)');
      let visibleCount = 0;

      rows.forEach(row => {
        const priorityText = row.cells[6].textContent.toLowerCase();
        const matches = priority === 'all' || priorityText.includes(priority);
        row.style.display = matches ? '' : 'none';
        if (matches) visibleCount++;
      });

      document.getElementById('entry-count').textContent = visibleCount;
      updateProgressStats();
    }

    // Status filter functionality
    function filterByStatus(status) {
      const rows = document.querySelectorAll('#complaint-table tr:not(.no-data)');
      let visibleCount = 0;

      rows.forEach(row => {
        const matches = status === 'all' || row.classList.contains(status);
        row.style.display = matches ? '' : 'none';
        if (matches) visibleCount++;
      });

      document.getElementById('entry-count').textContent = visibleCount;
      updateProgressStats();
    }

    // Add keyboard shortcuts for quick actions
    document.addEventListener('keydown', function (e) {
      if (e.ctrlKey || e.metaKey) {
        switch (e.key) {
          case '1':
            e.preventDefault();
            filterByStatus('pending');
            break;
          case '2':
            e.preventDefault();
            filterByStatus('progress');
            break;
          case '3':
            e.preventDefault();
            filterByStatus('complete');
            break;
          case '0':
            e.preventDefault();
            filterByStatus('all');
            break;
        }
      }
    });
  </script>
</body>

</html>