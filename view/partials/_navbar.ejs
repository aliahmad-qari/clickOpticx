
<style>
  /* Navbar Theme Variables */
  :root {
    --navbar-bg: #FFFFFF;
    --navbar-text: #1E293B;
    --navbar-border: #E2E8F0;
  }

  [data-theme="dark"] {
    --navbar-bg: #0F172A !important;
    --navbar-text: #F8FAFC !important;
    --navbar-border: #334155 !important;
  }

  /* Navbar Theme Support */
.navbar {
  background: var(--navbar-bg) !important;
  transition: all 0.3s ease;
  border-bottom: 1px solid var(--navbar-border) !important;
}

.navbar-brand-wrapper {
  background: var(--navbar-bg) !important;
  border-right: 1px solid var(--navbar-border) !important;
}

.navbar-menu-wrapper {
  background: var(--navbar-bg) !important;
}

/* Navbar text and elements */
.navbar .font-weight-bold {
  color: var(--navbar-text) !important;
}

.navbar .navbar-toggler,
.mobile-toggle-btn {
  border: none !important;
  background: transparent !important;
  color: var(--navbar-text) !important;
  font-size: 1.5rem !important;
  padding: 0.25rem 0.5rem !important;
  transition: all 0.3s ease;
}

.navbar .navbar-toggler:hover,
.mobile-toggle-btn:hover {
  color: var(--primary-color, #4F46E5) !important;
  transform: scale(1.1);
}

.navbar .navbar-toggler i,
.mobile-toggle-btn i {
  color: inherit !important;
}

/* Icon menu styling */
.icon-menu {
  color: var(--navbar-text) !important;
}

/* Navigation items */
.navbar .nav-item {
  color: var(--navbar-text) !important;
}

/* Dropdown menu dark theme support */
[data-theme="dark"] .dropdown-menu {
  background: var(--card-bg, #1E293B) !important;
  border: 1px solid var(--border-primary, #334155) !important;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 4px 6px -2px rgba(0, 0, 0, 0.2) !important;
}

[data-theme="dark"] .dropdown-item {
  color: var(--text-primary, #F8FAFC) !important;
}

[data-theme="dark"] .dropdown-item:hover,
[data-theme="dark"] .dropdown-item:focus {
  background: var(--bg-tertiary, #334155) !important;
  color: var(--text-primary, #F8FAFC) !important;
}

[data-theme="dark"] .dropdown-header {
  color: var(--text-primary, #F8FAFC) !important;
}

/* Notification specific styling */
[data-theme="dark"] .preview-item {
  border-bottom: 1px solid var(--border-primary, #334155) !important;
}

[data-theme="dark"] .preview-item-content {
  color: var(--text-secondary, #94A3B8) !important;
}

[data-theme="dark"] .text-muted {
  color: var(--text-secondary, #64748B) !important;
}

/* Profile dropdown dark theme */
[data-theme="dark"] .nav-profile img {
  border: 2px solid var(--border-primary, #334155);
}

/* Icon colors in dark theme */
.navbar .icon-bell,
.navbar .ti-settings,
.navbar .ti-power-off {
  color: var(--navbar-text) !important;
}

/* Notification badge */
.navbar .count {
  background: var(--danger-color, #EF4444) !important;
  color: white !important;
}

/* Profile image in navbar */
.navbar .nav-profile img {
  border: 2px solid var(--navbar-border) !important;
  transition: all 0.3s ease;
}

.navbar .nav-profile img:hover {
  border-color: var(--primary-color, #4F46E5) !important;
}

.logo-img {
  max-height: 50px;
  width: auto;
}

@media (max-width: 768px) {
  .logo-img {
    max-height: 40px; /* slightly smaller on tablet */
  }
}
@media (max-width: 576px) {
  .logo-img {
    max-height: 30px; /* smaller on mobile */
  }
}

/* Speed Test Button in Navbar */
.nav-speed-test-btn {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border: none;
  color: white;
  padding: 8px 16px;
  border-radius: 25px;
  font-size: 14px;
  font-weight: 500;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
  margin-left: 15px;
}

.nav-speed-test-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
  color: white;
}

.nav-speed-test-btn:active {
  transform: translateY(0);
}

@media (max-width: 768px) {
  .nav-speed-test-btn {
    padding: 6px 12px;
    font-size: 12px;
    margin-left: 10px;
  }
}

/* Theme Toggle Button */
.theme-toggle-btn {
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
  border: none;
  color: white;
  padding: 8px 16px;
  border-radius: 25px;
  font-size: 14px;
  font-weight: 500;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(240, 147, 251, 0.3);
  margin-left: 15px;
  position: relative;
  overflow: hidden;
}

.theme-toggle-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(240, 147, 251, 0.4);
  color: white;
}

.theme-toggle-btn:active {
  transform: translateY(0);
}

.theme-toggle-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.6s ease;
}

.theme-toggle-btn:hover::before {
  left: 100%;
}

.theme-icon {
  transition: all 0.3s ease;
  margin-right: 5px;
}

.theme-text {
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Dark theme toggle button styling */
[data-theme="dark"] .theme-toggle-btn {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
}

[data-theme="dark"] .theme-toggle-btn:hover {
  box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
}

@media (max-width: 768px) {
  .theme-toggle-btn {
    padding: 6px 12px;
    font-size: 12px;
    margin-left: 10px;
  }
  
  .theme-text {
    display: none !important;
  }
}

</style>
<nav class="navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row">
  <div class="text-center navbar-brand-wrapper d-flex align-items-center justify-content-center">
  <img src="/images/blacklogo.png" 
       alt="logo" 
       id="navImgPreview" 
       class="img-fluid logo-img" />
    <% if (isAdmin) { %>
      <form action="/index" method="POST" enctype="multipart/form-data" id="navImgForm">
        <label for="navImgInput" style="cursor: pointer;">
          <input type="file" name="navImg" id="navImgInput" style="display: none;"
            onchange="document.getElementById('navImgForm').submit();" />
        </label>
      </form>
      <% } %>
  </div>

  <div class="navbar-menu-wrapper d-flex align-items-center justify-content-end">
    <!-- Mobile Sidebar Toggle -->
    <button class="navbar-toggler d-lg-none mobile-toggle-btn" type="button" data-toggle="offcanvas">
      <i class="fas fa-bars"></i>
    </button>
    
    <!-- Desktop Sidebar Toggle -->
    <button class="navbar-toggler d-none d-lg-block align-self-center" type="button" data-toggle="minimize">
      <span class="icon-menu"></span>
    </button>
    <ul class="navbar-nav mr-lg-2">
      <li class="nav-item nav-search d-none d-lg-block">
        <div class="input-group">
          <form action="/logoTextChange" method="post">
            <!-- <input type="text" name="logo_text">
            <button type="submit">submit</button> -->
            <h4 class="font-weight-bold m-0 mx-auto">
              <%= bg_result[0].logo_text %>
            </h4>
          </form>
        </div>
      </li>
      <li class="nav-item">
        <button id="navSpeedTestBtn" class="btn nav-speed-test-btn" onclick="showSpeedTestModal()" onmouseover="console.log('Speed test button hovered')" onmousedown="console.log('Speed test button clicked')">
          <i class="fas fa-tachometer-alt me-1"></i>
          <span class="d-none d-md-inline">Speed Test</span>
        </button>
      </li>
      <li class="nav-item">
        <button id="themeToggleBtn" class="btn theme-toggle-btn" onclick="toggleTheme()" title="Toggle Dark/Light Theme">
          <i class="fas fa-sun theme-icon" id="themeIcon"></i>
          <span class="d-none d-lg-inline theme-text" id="themeText">Light</span>
        </button>
      </li>
    </ul>
    <ul class="navbar-nav navbar-nav-right">
      <% if (isAdmin) { %>
        <li class="nav-item dropdown">
          <a class="nav-link count-indicator dropdown-toggle" id="notificationDropdown" href="#" data-toggle="dropdown">
            <i class="icon-bell mx-0"></i>
            <% if (totalNotifactions> 0) { %>
              <span class="count" style="left: 36%;top:-10px;width: 27px;height: 27px; color: white;">
                <%= totalNotifactions %>
              </span>
              <% } %>
          </a>
          <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list"
            aria-labelledby="notificationDropdown">
            <h2 class="mb-0 font-weight-bold dropdown-header">Notifications</h2>

            <div class="notif-scrollable" style="max-height: 300px; overflow-y: auto;">
              <% if (password_datass.length===0) { %>
                <p class="text-muted text-center">No new notifications</p>
                <% } %>

                  <% password_datass.forEach((notif)=> { %>
                    <a href="#" class="dropdown-item preview-item mark-read" data-id="<%= notif.id %>">
                      <div class="preview-thumbnail">
                        <div class="preview-icon bg-primary">
                          <i class="icon-bell mx-0"></i>
                        </div>
                      </div>
                      <div class="preview-item-content">
                        <p class="font-weight-light small-text mb-0 text-muted">
                          <%= notif.username %>
                        </p>
                        <%= notif.message %><br>
                          <%= notif.field2 %>
                            <%= notif.package_name %>
                              <%= notif.Complaint %>
                      </div>
                    </a>
                    <% }); %>
            </div>
          </div>
        </li>
        <% } %>
          <script>
            document.querySelectorAll(".mark-read").forEach(item => {
              item.addEventListener("click", async (e) => {
                e.preventDefault();
                const notifId = item.getAttribute("data-id");

                try {
                  const response = await fetch("/mark-one-read", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ id: notifId })
                  });

                  if (response.ok) {
                    console.log(`Notification ${notifId} marked as read`);
                    item.style.transition = "opacity 0.5s ease";
                    item.style.opacity = "0";
                    setTimeout(() => item.remove(), 500);
                  } else {
                    console.error("Failed to mark as read");
                  }
                } catch (error) {
                  console.error("Fetch error:", error);
                }
              });
            });
          </script>

          <!-- User Dropdown -->
          <% if (isUser) { %>
            <li class="nav-item dropdown">
              <a class="nav-link count-indicator dropdown-toggle" id="notificationDropdown" href="#"
                data-toggle="dropdown">
                <i class="icon-bell mx-0"></i>
                <% if (Notifactions> 0) { %>
                  <span class="count" style="left: 36%;top:-10px;width: 27px;height: 27px; color: white;">
                    <%= Notifactions %>
                  </span>
                  <% } %>
              </a>
              <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list"
                aria-labelledby="notificationDropdown">
                <h2 class="mb-0 font-weight-bold dropdown-header">Notifications</h2>

                <div class="notif-scrollable" style="max-height: 300px; overflow-y: auto;">
                  <% if (notifications_users.length===0) { %>
                    <p class="text-muted text-center">No new notifications</p>
                    <% } %>

                      <% notifications_users.forEach((notif)=> { %>
                        <a href="#" class="dropdown-item preview-item mark-read" data-id="<%= notif.id %>">
                          <div class="preview-thumbnail">
                            <div class="preview-icon bg-primary">
                              <i class="icon-bell mx-0"></i>
                            </div>
                          </div>
                          <div class="preview-item-content">
                            <p class="font-weight-light small-text mb-0 text-muted"></p>
                            <%= notif.message %>
                          </div>
                        </a>
                        <% }); %>
                </div>
              </div>
            </li>
            <% } %>

              <script>
                document.addEventListener("DOMContentLoaded", () => {
                  document.querySelectorAll(".mark-read").forEach((element) => {
                    element.addEventListener("click", function (e) {
                      e.preventDefault();
                      const id = this.getAttribute("data-id");

                      fetch("/mark-one", {
                        method: "POST",
                        headers: {
                          "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ id }),
                      })
                        .then(response => {
                          if (response.ok) {
                            // Optionally redirect or update UI
                            this.classList.add("text-muted");
                            this.querySelector(".preview-item-content").innerHTML +=
                              ' <span class="badge badge-secondary">Read</span>';
                          } else {
                            console.error("Failed to mark notification as read");
                          }
                        })
                        .catch((error) => {
                          console.error("Error:", error);
                        });
                    });
                  });
                });
              </script>
              <ul class="navbar-nav navbar-nav-right">
                <li class="nav-item nav-profile dropdown">
                  <a class="nav-link dropdown-toggle" href="#" data-toggle="dropdown" id="profileDropdown">
                    <img
                      src="<%= user && user.user_img ? '/uploads/' + user.user_img : 'https://img.icons8.com/bubbles/100/standing-man.png' %>"
                      alt="profile" />
                  </a>
                 
                  <div class="dropdown-menu dropdown-menu-right navbar-dropdown" aria-labelledby="profileDropdown">
                      <% if (isUser) { %>
                    <a class="dropdown-item" href="/profile">
                      <i class="ti-settings text-primary"></i> Settings
                    </a>
                     <% } %>
                    <a class="dropdown-item" href="/">
                      <i class="ti-power-off text-primary"></i> Logout
                    </a>
                  </div>
                </li>
              </ul>
              <button class="navbar-toggler navbar-toggler-right d-lg-none align-self-center" type="button"
                data-toggle="offcanvas">
                <span class="icon-menu"></span>
              </button>
  </div>
</nav>

<script>
  document.getElementById("navImgPreview").addEventListener("click", function () {
    document.getElementById("navImgInput").click();
  });

  document.getElementById("navImgInput").addEventListener("change", function () {
    document.getElementById("navImgForm").submit();
  });
</script>

<style>
  .notif-scrollable {
    max-height: 300px;
    overflow-y: auto;
  }
</style>

<!-- Include Speedtest Modal on all pages with navbar -->
<%- include('./speedtest-modal.ejs') %>

<!-- Global Theme System -->
<script>
// Theme management system
class ThemeManager {
  constructor() {
    this.init();
  }

  init() {
    // Get saved theme or default to light
    const savedTheme = localStorage.getItem('clicktake-theme') || 'light';
    this.setTheme(savedTheme, false);
    
    // Update button text and icon
    this.updateThemeButton();
    
    // Listen for system theme changes
    if (window.matchMedia) {
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (!localStorage.getItem('clicktake-theme')) {
          this.setTheme(e.matches ? 'dark' : 'light');
        }
      });
    }
  }

  setTheme(theme, save = true) {
    // Set theme on document
    document.documentElement.setAttribute('data-theme', theme);
    document.body.setAttribute('data-theme', theme);
    
    // Save to localStorage
    if (save) {
      localStorage.setItem('clicktake-theme', theme);
    }
    
    // Update button
    this.updateThemeButton();
    
    // Dispatch theme change event for other components
    window.dispatchEvent(new CustomEvent('themeChanged', { detail: { theme } }));
  }

  getCurrentTheme() {
    return document.documentElement.getAttribute('data-theme') || 'light';
  }

  toggleTheme() {
    const currentTheme = this.getCurrentTheme();
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    this.setTheme(newTheme);
    
    // Add visual feedback
    this.addToggleAnimation();
  }

  updateThemeButton() {
    const themeIcon = document.getElementById('themeIcon');
    const themeText = document.getElementById('themeText');
    const currentTheme = this.getCurrentTheme();
    
    if (themeIcon && themeText) {
      if (currentTheme === 'dark') {
        themeIcon.className = 'fas fa-moon theme-icon';
        themeText.textContent = 'Dark';
      } else {
        themeIcon.className = 'fas fa-sun theme-icon';
        themeText.textContent = 'Light';
      }
    }
  }

  addToggleAnimation() {
    const button = document.getElementById('themeToggleBtn');
    if (button) {
      button.style.transform = 'scale(0.95)';
      setTimeout(() => {
        button.style.transform = '';
      }, 150);
    }
  }
}

// Initialize theme manager
const themeManager = new ThemeManager();

// Global function for button onclick
function toggleTheme() {
  themeManager.toggleTheme();
}

// Make theme manager globally available
window.themeManager = themeManager;
</script>