<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Unpaid vs Active Users</title>
  
  <!-- CSS Libraries -->
  <link rel="stylesheet" href="/vendors/feather/feather.css">
  <link rel="stylesheet" href="/vendors/ti-icons/css/themify-icons.css">
  <link rel="stylesheet" href="/vendors/css/vendor.bundle.base.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <!-- endinject -->
  <!-- Plugin css for this page -->
  <link rel="stylesheet" href="/vendors/datatables.net-bs4/dataTables.bootstrap4.css">
  <link rel="stylesheet" href="/vendors/ti-icons/css/themify-icons.css">
  <link rel="stylesheet" type="text/css" href="/js/select.dataTables.min.css">
  <!-- End plugin css for this page -->
  <!-- inject:css -->
  <link rel="stylesheet" href="/css/vertical-layout-light/style.css">
  <!-- endinject -->
  <link rel="shortcut icon" href="/images/favicon.png" />

  <!-- Material Design Icons CSS -->
  <link href="https://cdn.jsdelivr.net/npm/@mdi/font@7.2.96/css/materialdesignicons.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

  <!-- Bootstrap CSS (single version) -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

  <style>
    :root {
      --primary: #6c5ce7;
      --success: #00b894;
      --warning: #fdcb6e;
      --danger: #d63031;
      --info: #00cec9;
      --dark: #2d3436;
      --light: #f5f6fa;
    }

    body {
      background: var(--light);
      color: var(--dark);
      overflow-x: hidden;
    }

    /* Dark Mode Styles */
    [data-theme="dark"] {
      --light: #1a1a1a;
      --dark: #e0e0e0;
      --danger: #ef4444;
      --success: #22c55e;
      --info: #06b6d4;
    }

    [data-theme="dark"] body {
      background: #1a1a1a !important;
      color: #e0e0e0 !important;
    }

    [data-theme="dark"] .card {
      background: #2d2d2d !important;
      color: #e0e0e0 !important;
    }

    [data-theme="dark"] .stats-card {
      background: #2d2d2d !important;
      border: 1px solid #374151 !important;
    }

    [data-theme="dark"] .table {
      background: #2d2d2d !important;
      color: #e0e0e0 !important;
    }

    [data-theme="dark"] .table th {
      background-color: #374151 !important;
      color: #e0e0e0 !important;
    }

    [data-theme="dark"] .table td {
      border-bottom: 1px solid #374151 !important;
      color: #e0e0e0 !important;
    }

    [data-theme="dark"] .table tr:hover {
      background-color: #374151 !important;
    }

    [data-theme="dark"] .search-input {
      background-color: #374151 !important;
      border-color: #4b5563 !important;
      color: #e0e0e0 !important;
    }

    .main-panel {
      flex-grow: 1;
      padding: 20px;
    }

    @media (max-width: 991px) {
      .main-panel {
        margin-left: 0;
        padding: 10px;
      }
    }

    /* ===== MOBILE CARD LAYOUT ===== */
    @media (max-width: 768px) {
      .desktop-table {
        display: none !important;
      }
      
      .mobile-cards {
        display: block !important;
      }
      
      .summary-charts {
        grid-template-columns: 1fr !important;
      }
    }
    
    @media (min-width: 769px) {
      .desktop-table {
        display: block !important;
      }
      
      .mobile-cards {
        display: none !important;
      }
    }
    
    .mobile-cards {
      display: none;
    }
    
    .user-status-card {
      background: white;
      border-radius: 12px;
      padding: 15px;
      margin-bottom: 15px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      border: 1px solid #e0e0e0;
      position: relative;
    }
    
    .user-status-card.paid::before {
      background: var(--success);
    }
    
    .user-status-card.unpaid::before {
      background: var(--warning);
    }
    
    .user-status-card.no-payment::before {
      background: var(--danger);
    }
    
    .user-status-card::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: 4px;
      border-radius: 12px 0 0 12px;
    }

    .card {
      background: #ffffff;
      border-radius: 12px;
      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
      border: none;
      overflow: hidden;
      margin-bottom: 30px;
    }

    .card-header {
      background: linear-gradient(90deg, var(--primary), #a29bfe);
      color: white;
      padding: 20px 25px;
      font-size: 1.4rem;
      font-weight: 600;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .summary-charts {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      margin-bottom: 30px;
    }

    .chart-card {
      background: white;
      border-radius: 12px;
      padding: 20px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .chart-header {
      text-align: center;
      margin-bottom: 20px;
    }

    .chart-title {
      font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 10px;
    }

    .chart-container {
      position: relative;
      height: 300px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .stats-overview {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 15px;
      margin-bottom: 25px;
    }

    .stat-card {
      background: white;
      padding: 20px;
      border-radius: 10px;
      text-align: center;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      border-left: 4px solid;
    }

    .stat-card.total { border-left-color: var(--primary); }
    .stat-card.paid { border-left-color: var(--success); }
    .stat-card.unpaid { border-left-color: var(--warning); }
    .stat-card.no-payment { border-left-color: var(--danger); }

    .stat-number {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 5px;
    }

    .stat-label {
      color: #666;
      font-size: 0.9rem;
    }

    .stat-percentage {
      font-size: 0.8rem;
      margin-top: 5px;
      font-weight: 500;
    }

    .toolbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
      flex-wrap: wrap;
      gap: 15px;
    }

    .search-box {
      position: relative;
      flex: 1;
      max-width: 300px;
    }

    .search-box i {
      position: absolute;
      left: 15px;
      top: 50%;
      transform: translateY(-50%);
      color: #9e9e9e;
    }

    .search-input {
      width: 100%;
      padding: 12px 15px 12px 45px;
      border: 1px solid #e0e0e0;
      border-radius: 8px;
      font-size: 0.95rem;
    }

    .status-filters {
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
    }

    .status-btn {
      padding: 8px 16px;
      border: 2px solid;
      border-radius: 25px;
      background: transparent;
      cursor: pointer;
      font-weight: 500;
      transition: all 0.3s ease;
      font-size: 0.9rem;
    }

    .status-btn.all {
      border-color: var(--primary);
      color: var(--primary);
    }

    .status-btn.all.active {
      background: var(--primary);
      color: white;
    }

    .status-btn.paid {
      border-color: var(--success);
      color: var(--success);
    }

    .status-btn.paid.active {
      background: var(--success);
      color: white;
    }

    .status-btn.unpaid {
      border-color: var(--warning);
      color: var(--warning);
    }

    .status-btn.unpaid.active {
      background: var(--warning);
      color: white;
    }

    .status-btn.no-payment {
      border-color: var(--danger);
      color: var(--danger);
    }

    .status-btn.no-payment.active {
      background: var(--danger);
      color: white;
    }

    .table-responsive {
      overflow-x: auto;
      border-radius: 10px;
      background: white;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
      min-width: 700px;
    }

    .table th {
      background-color: #f5f8ff;
      color: var(--primary);
      font-weight: 600;
      padding: 16px 20px;
      text-align: left;
      border-bottom: 1px solid #e0e0e0;
    }

    .table td {
      padding: 14px 20px;
      border-bottom: 1px solid #f0f0f0;
      vertical-align: middle;
    }

    .status-badge {
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 0.85rem;
      font-weight: 500;
      display: inline-flex;
      align-items: center;
      gap: 5px;
    }

    .status-badge.paid {
      background-color: rgba(0, 184, 148, 0.1);
      color: var(--success);
    }

    .status-badge.unpaid {
      background-color: rgba(253, 203, 110, 0.1);
      color: var(--warning);
    }

    .status-badge.no-payment {
      background-color: rgba(214, 48, 49, 0.1);
      color: var(--danger);
    }

    .pie-chart {
      width: 200px;
      height: 200px;
      border-radius: 50%;
      background: conic-gradient(
        var(--success) 0deg,
        var(--success) var(--paid-angle, 120deg),
        var(--warning) var(--paid-angle, 120deg),
        var(--warning) var(--unpaid-angle, 240deg),
        var(--danger) var(--unpaid-angle, 240deg),
        var(--danger) 360deg
      );
      margin: 0 auto;
      position: relative;
    }

    .pie-chart::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 100px;
      height: 100px;
      background: white;
      border-radius: 50%;
    }

    .chart-legend {
      display: flex;
      justify-content: center;
      gap: 20px;
      margin-top: 20px;
      flex-wrap: wrap;
    }

    .legend-item {
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 0.9rem;
    }

    .legend-color {
      width: 12px;
      height: 12px;
      border-radius: 50%;
    }

    @media (max-width: 576px) {
      .toolbar {
        flex-direction: column;
        align-items: stretch;
      }
      
      .status-filters {
        justify-content: center;
      }
      
      .chart-legend {
        flex-direction: column;
        align-items: center;
        gap: 10px;
      }
    }
  </style>
</head>

<body>
  <div class="container-scroller">
    <%- include('../partials/_navbar.ejs') %>
    
    <div class="container-fluid page-body-wrapper" style="padding-left: 0px;">
     
      <%- include('../partials/Sidebar.ejs') %>
      
      <div class="main-panel" style="width: 100%;">
        <div class="content-wrapper">
          <div class="card">
            <div class="card-header">
              <i class="fas fa-chart-pie me-2"></i>
              Payment Status Analysis: Unpaid vs Active Users
            </div>
            
            <div class="card-body">
              <!-- Statistics Overview -->
              <div class="stats-overview" id="stats-overview">
                <!-- Stats will be populated by JavaScript -->
              </div>

              <!-- Summary Charts -->
              <div class="summary-charts">
                <div class="chart-card">
                  <div class="chart-header">
                    <div class="chart-title">Payment Status Distribution</div>
                    <p class="text-muted">Overall user payment breakdown</p>
                  </div>
                  <div class="chart-container">
                    <div class="pie-chart" id="payment-pie-chart"></div>
                  </div>
                  <div class="chart-legend">
                    <div class="legend-item">
                      <div class="legend-color" style="background: var(--success);"></div>
                      <span>Paid Users</span>
                    </div>
                    <div class="legend-item">
                      <div class="legend-color" style="background: var(--warning);"></div>
                      <span>Unpaid Users</span>
                    </div>
                    <div class="legend-item">
                      <div class="legend-color" style="background: var(--danger);"></div>
                      <span>No Payment</span>
                    </div>
                  </div>
                </div>

                <div class="chart-card">
                  <div class="chart-header">
                    <div class="chart-title">Revenue Impact</div>
                    <p class="text-muted">Potential revenue from unpaid users</p>
                  </div>
                  <div class="chart-container">
                    <div id="revenue-stats">
                      <!-- Revenue stats will be populated -->
                    </div>
                  </div>
                </div>
              </div>

              <div class="toolbar">
                <div class="search-box">
                  <i class="fas fa-search"></i>
                  <input type="text" id="search-input" class="search-input" 
                         placeholder="Search users by name, email, or plan...">
                </div>
                
                <div class="status-filters">
                  <button class="status-btn all active" data-status="">
                    <i class="fas fa-users"></i> All Users
                  </button>
                  <button class="status-btn paid" data-status="paid">
                    <i class="fas fa-check-circle"></i> Paid
                  </button>
                  <button class="status-btn unpaid" data-status="unpaid">
                    <i class="fas fa-clock"></i> Unpaid
                  </button>
                  <button class="status-btn no-payment" data-status="no-payment">
                    <i class="fas fa-times-circle"></i> No Payment
                  </button>
                </div>
              </div>

              <!-- Desktop Table View -->
              <div class="desktop-table">
                <div class="table-responsive">
                  <table class="table">
                    <thead>
                      <tr>
                        <th>User ID</th>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Plan</th>
                        <th>Payment Status</th>
                        <th>Risk Level</th>
                      </tr>
                    </thead>
                    <tbody id="users-table">
                      <!-- Data will be loaded via JavaScript -->
                    </tbody>
                  </table>
                </div>
              </div>

              <!-- Mobile Cards View -->
              <div class="mobile-cards" id="users-cards">
                <!-- Cards will be loaded via JavaScript -->
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/js/off-canvas.js"></script>
  <script src="/js/billing-payments-common.js"></script>
  <script>
    let originalUsers = [];
    let currentFilter = '';

    // Load unpaid vs active users data
    async function loadUsersData() {
      try {
        const response = await fetch('/unpaid-vs-active');
        const users = await response.json();
        
        originalUsers = users;
        displayUsersTable(users);
        displayUsersCards(users);
        updateStatistics(users);
        updateCharts(users);
      } catch (error) {
        console.error('Error loading users data:', error);
      }
    }

    function displayUsersTable(users) {
      const tbody = document.getElementById('users-table');
      
      if (users.length === 0) {
        tbody.innerHTML = `
          <tr>
            <td colspan="6" class="text-center" style="padding: 40px;">
              <i class="fas fa-users-slash" style="font-size: 3rem; color: #ccc; margin-bottom: 10px;"></i>
              <h6>No Users Found</h6>
              <p class="text-muted">No users match your current filter criteria</p>
            </td>
          </tr>
        `;
        return;
      }

      tbody.innerHTML = users.map(user => `
        <tr>
          <td>#${user.id}</td>
          <td>${user.Username}</td>
          <td>${user.Email}</td>
          <td>${user.plan || 'No Plan'}</td>
          <td><span class="status-badge ${user.payment_status.toLowerCase().replace(' ', '-')}">
            ${getStatusIcon(user.payment_status)} ${user.payment_status}
          </span></td>
          <td>${getRiskLevel(user.payment_status)}</td>
        </tr>
      `).join('');
    }

    function displayUsersCards(users) {
      const cardsContainer = document.getElementById('users-cards');
      
      if (users.length === 0) {
        cardsContainer.innerHTML = `
          <div class="user-status-card">
            <div style="text-align: center; padding: 40px;">
              <i class="fas fa-users-slash" style="font-size: 3rem; color: #ccc; margin-bottom: 10px;"></i>
              <h6>No Users Found</h6>
              <p class="text-muted">No users match your current filter criteria</p>
            </div>
          </div>
        `;
        return;
      }

      cardsContainer.innerHTML = users.map(user => `
        <div class="user-status-card ${user.payment_status.toLowerCase().replace(' ', '-')}">
          <div class="user-status-card-header">
            <div class="user-status-card-avatar">
              ${user.Username.charAt(0).toUpperCase()}
            </div>
            <div class="user-status-card-name">
              <h6>${user.Username}</h6>
              <p>${user.Email}</p>
            </div>
          </div>
          
          <div class="user-status-card-content">
            <div class="user-status-card-field">
              <div class="user-status-card-label">User ID</div>
              <div class="user-status-card-value">#${user.id}</div>
            </div>
            
            <div class="user-status-card-field">
              <div class="user-status-card-label">Plan</div>
              <div class="user-status-card-value">${user.plan || 'No Plan'}</div>
            </div>
            
            <div class="user-status-card-field">
              <div class="user-status-card-label">Payment Status</div>
              <div class="user-status-card-value">
                <span class="status-badge ${user.payment_status.toLowerCase().replace(' ', '-')}">
                  ${getStatusIcon(user.payment_status)} ${user.payment_status}
                </span>
              </div>
            </div>
            
            <div class="user-status-card-field">
              <div class="user-status-card-label">Risk Level</div>
              <div class="user-status-card-value">${getRiskLevel(user.payment_status)}</div>
            </div>
          </div>
        </div>
      `).join('');
    }

    function getStatusIcon(status) {
      switch(status.toLowerCase()) {
        case 'paid': return '<i class="fas fa-check-circle"></i>';
        case 'unpaid': return '<i class="fas fa-clock"></i>';
        case 'no payment': return '<i class="fas fa-times-circle"></i>';
        default: return '<i class="fas fa-question-circle"></i>';
      }
    }

    function getRiskLevel(status) {
      switch(status.toLowerCase()) {
        case 'paid': return '<span class="badge" style="background: rgba(0, 184, 148, 0.1); color: var(--success);">Low Risk</span>';
        case 'unpaid': return '<span class="badge" style="background: rgba(253, 203, 110, 0.1); color: var(--warning);">Medium Risk</span>';
        case 'no payment': return '<span class="badge" style="background: rgba(214, 48, 49, 0.1); color: var(--danger);">High Risk</span>';
        default: return '<span class="badge" style="background: #f0f0f0; color: #666;">Unknown</span>';
      }
    }

    function updateStatistics(users) {
      const stats = users.reduce((acc, user) => {
        const status = user.payment_status.toLowerCase().replace(' ', '-');
        acc[status] = (acc[status] || 0) + 1;
        acc.total = (acc.total || 0) + 1;
        return acc;
      }, {});

      const total = stats.total || 1; // Prevent division by zero

      document.getElementById('stats-overview').innerHTML = `
        <div class="stat-card total">
          <div class="stat-number" style="color: var(--primary)">${stats.total || 0}</div>
          <div class="stat-label">Total Users</div>
          <div class="stat-percentage">100%</div>
        </div>
        <div class="stat-card paid">
          <div class="stat-number" style="color: var(--success)">${stats.paid || 0}</div>
          <div class="stat-label">Paid Users</div>
          <div class="stat-percentage">${Math.round(((stats.paid || 0) / total) * 100)}%</div>
        </div>
        <div class="stat-card unpaid">
          <div class="stat-number" style="color: var(--warning)">${stats.unpaid || 0}</div>
          <div class="stat-label">Unpaid Users</div>
          <div class="stat-percentage">${Math.round(((stats.unpaid || 0) / total) * 100)}%</div>
        </div>
        <div class="stat-card no-payment">
          <div class="stat-number" style="color: var(--danger)">${stats['no-payment'] || 0}</div>
          <div class="stat-label">No Payment</div>
          <div class="stat-percentage">${Math.round(((stats['no-payment'] || 0) / total) * 100)}%</div>
        </div>
      `;
    }

    function updateCharts(users) {
      const stats = users.reduce((acc, user) => {
        const status = user.payment_status.toLowerCase().replace(' ', '-');
        acc[status] = (acc[status] || 0) + 1;
        return acc;
      }, {});

      const total = users.length || 1;
      const paidAngle = ((stats.paid || 0) / total) * 360;
      const unpaidAngle = paidAngle + ((stats.unpaid || 0) / total) * 360;

      // Update pie chart
      const pieChart = document.getElementById('payment-pie-chart');
      pieChart.style.setProperty('--paid-angle', `${paidAngle}deg`);
      pieChart.style.setProperty('--unpaid-angle', `${unpaidAngle}deg`);

      // Update revenue stats
      const unpaidCount = stats.unpaid || 0;
      const noPaymentCount = stats['no-payment'] || 0;
      const potentialRevenue = (unpaidCount + noPaymentCount) * 2000; // Assuming average package cost

      document.getElementById('revenue-stats').innerHTML = `
        <div style="text-align: center;">
          <div style="font-size: 2.5rem; font-weight: 700; color: var(--warning); margin-bottom: 10px;">
            PKR ${potentialRevenue.toLocaleString()}
          </div>
          <div style="color: #666; margin-bottom: 20px;">Potential Monthly Revenue</div>
          
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; text-align: center;">
            <div>
              <div style="font-size: 1.5rem; font-weight: 600; color: var(--warning);">${unpaidCount}</div>
              <div style="font-size: 0.85rem; color: #666;">Unpaid Users</div>
            </div>
            <div>
              <div style="font-size: 1.5rem; font-weight: 600; color: var(--danger);">${noPaymentCount}</div>
              <div style="font-size: 0.85rem; color: #666;">No Payment</div>
            </div>
          </div>
        </div>
      `;
    }

    // Filter functionality
    document.querySelectorAll('.status-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        document.querySelectorAll('.status-btn').forEach(b => b.classList.remove('active'));
        this.classList.add('active');
        
        const status = this.dataset.status;
        currentFilter = status;
        
        const filteredUsers = status ? 
          originalUsers.filter(user => user.payment_status.toLowerCase().replace(' ', '-') === status) : 
          originalUsers;
        
        displayUsersTable(filteredUsers);
        displayUsersCards(filteredUsers);
      });
    });

    // Search functionality
    document.getElementById('search-input').addEventListener('input', function(e) {
      const searchTerm = e.target.value.toLowerCase();
      let filteredUsers = originalUsers.filter(user => 
        user.id.toString().includes(searchTerm) ||
        user.Username.toLowerCase().includes(searchTerm) ||
        user.Email.toLowerCase().includes(searchTerm) ||
        (user.plan && user.plan.toLowerCase().includes(searchTerm)) ||
        user.payment_status.toLowerCase().includes(searchTerm)
      );
      
      // Apply current filter if any
      if (currentFilter) {
        filteredUsers = filteredUsers.filter(user => 
          user.payment_status.toLowerCase().replace(' ', '-') === currentFilter
        );
      }
      
      displayUsersTable(filteredUsers);
      displayUsersCards(filteredUsers);
    });

    // Load data on page load
    document.addEventListener('DOMContentLoaded', loadUsersData);
  </script>
</body>
</html>