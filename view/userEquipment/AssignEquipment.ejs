<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Assign Equipment</title>
    <link rel="stylesheet" href="/vendors/feather/feather.css">
    <link rel="stylesheet" href="/vendors/ti-icons/css/themify-icons.css">
    <link rel="stylesheet" href="/vendors/css/vendor.bundle.base.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/css/vertical-layout-light/style.css">
    <link rel="shortcut icon" href="/images/favicon.png" />
    <link href="https://cdn.jsdelivr.net/npm/@mdi/font@7.2.96/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <style>
        :root {
            --primary: #6c5ce7;
            --primary-light: #a29bfe;
            --secondary: #00cec9;
            --success: #198754;
            --warning: #fdcb6e;
            --danger: #d63031;
            --dark: #2d3436;
            --light: #f5f6fa;
            --gray: #dfe6e9;
            --card-bg: rgba(255, 255, 255, 0.9);
            --glass-effect: rgba(255, 255, 255, 0.15);
        }

        * {
            box-sizing: border-box;
        }

        body {
            background: var(--light);
            color: var(--dark);
            font-family: 'Poppins', sans-serif;
            overflow-x: hidden;
        }

        .container-fluid.page-body-wrapper {
            display: flex;
            flex-direction: row;
        }

        .main-panel {
            flex-grow: 1;
            padding: 10px;
            transition: margin-left 0.3s ease;
            width: 100%;
        }

        @media (max-width: 991px) {
            .main-panel {
                margin-left: 0;
                padding: 5px;
            }
        }

        .card {
            background: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
            border: none;
            overflow: hidden;
            margin-bottom: 30px;
        }

        .card-header {
            background: linear-gradient(90deg, var(--primary), var(--primary-light));
            color: white;
            padding: 20px 25px;
            font-size: 1.4rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .card-body {
            padding: 25px;
        }

        /* Tab Styles */
        .tab-container {
            text-align: center;
            margin-bottom: 30px;
        }

        .tab-btn {
            background: var(--gray);
            color: var(--dark);
            border: none;
            padding: 12px 30px;
            margin: 0 5px;
            border-radius: 25px;
            font-weight: 600;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .tab-btn.active {
            background: linear-gradient(90deg, var(--primary), var(--primary-light));
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(108, 92, 231, 0.3);
        }

        .tab-btn:hover {
            transform: translateY(-1px);
        }

        /* Search Styles */
        .search-container {
            display: flex;
            gap: 15px;
            margin-bottom: 25px;
            flex-wrap: wrap;
        }

        .search-box {
            position: relative;
            flex: 1;
            min-width: 200px;
        }

        .search-box i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray);
            z-index: 2;
        }

        .search-input {
            width: 100%;
            padding: 12px 15px 12px 45px;
            border: 2px solid var(--gray);
            border-radius: 25px;
            background: white;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.1);
        }

        /* Desktop Table Styles */
        .desktop-table {
            display: block;
            overflow-x: auto;
            border-radius: 10px;
            margin-bottom: 30px;
        }

        .equipment-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            border: 1px solid var(--gray);
            border-radius: 10px;
            overflow: hidden;
        }

        .equipment-table th {
            background: linear-gradient(90deg, var(--primary), var(--primary-light));
            color: white;
            padding: 15px;
            font-weight: 600;
            text-align: left;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }

        .equipment-table td {
            padding: 12px 15px;
            border-bottom: 1px solid #f0f0f0;
            background: white;
        }

        .equipment-table tr:last-child td {
            border-bottom: none;
        }

        .equipment-table tr:hover td {
            background: #f8f9fa;
        }

        /* Mobile Card Styles */
        .user-grid {
            display: none;
            grid-template-columns: 1fr;
            gap: 15px;
            margin-bottom: 30px;
        }

        /* Mobile-first responsive design */
        @media (max-width: 768px) {
            .desktop-table {
                display: none !important;
            }
            
            .user-grid {
                display: grid;
            }
        }

        .user-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: all 0.3s ease;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .user-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .user-card-header {
            background: linear-gradient(135deg, var(--primary-light), var(--primary));
            color: white;
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .user-id {
            font-weight: 600;
            font-size: 1.1rem;
        }

        .user-email {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .user-card-body {
            padding: 20px;
        }

        .equipment-info {
            margin-bottom: 15px;
        }

        .equipment-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 0;
            border-bottom: 1px solid #f0f0f0;
        }

        .equipment-row:last-child {
            border-bottom: none;
            margin-bottom: 15px;
        }

        .equipment-name {
            font-weight: 600;
            color: var(--dark);
            flex: 1;
        }

        .equipment-quantity {
            background: var(--primary);
            color: white;
            padding: 4px 12px;
            border-radius: 15px;
            font-size: 0.85rem;
            font-weight: 600;
            margin-right: 10px;
        }

        .equipment-price {
            color: var(--success);
            font-weight: 600;
            font-size: 0.9rem;
        }

        .user-actions {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-top: 15px;
        }

        .btn-action {
            padding: 8px 16px;
            border: none;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.85rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .btn-view {
            background: var(--secondary);
            color: white;
        }

        .btn-edit {
            background: var(--warning);
            color: white;
        }

        .btn-delete {
            background: var(--danger);
            color: white;
        }

        .btn-action:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

        /* Pagination Styles */
        .pagination-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 30px;
            gap: 15px;
        }

        .pagination-info {
            color: var(--dark);
            font-weight: 500;
        }

        .pagination-controls {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .pagination-btn {
            background: var(--gray);
            color: var(--dark);
            border: none;
            padding: 10px 15px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .pagination-btn:hover:not(:disabled) {
            background: var(--primary);
            color: white;
            transform: translateY(-1px);
        }

        .pagination-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .pagination-btn.active {
            background: var(--primary);
            color: white;
        }

        /* Section Styles */
        .section {
            display: none;
        }

        .section.active {
            display: block;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: var(--gray);
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        .empty-state h3 {
            margin-bottom: 10px;
            color: var(--dark);
        }

        /* Loading State */
        .loading {
            text-align: center;
            padding: 40px;
        }

        .spinner {
            display: inline-block;
            width: 40px;
            height: 40px;
            border: 4px solid var(--gray);
            border-radius: 50%;
            border-top-color: var(--primary);
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .card-header {
                font-size: 1.2rem;
                padding: 15px 20px;
            }
            
            .tab-btn {
                padding: 10px 20px;
                font-size: 0.9rem;
            }
            
            .search-container {
                flex-direction: column;
            }
            
            .search-box {
                min-width: auto;
            }
            
            .user-actions {
                flex-wrap: wrap;
                gap: 8px;
            }
            
            .btn-action {
                flex: 1;
                min-width: 80px;
                justify-content: center;
            }
        }

        @media (max-width: 480px) {
            .main-panel {
                padding: 5px;
            }
            
            .card-body {
                padding: 15px;
            }
            
            .user-card-body {
                padding: 15px;
            }
            
            .pagination-controls {
                flex-wrap: wrap;
                justify-content: center;
            }
        }

    /* Dark Mode Support */
    [data-theme="dark"] body {
      background-color: #111827 !important;
      color: #F9FAFB !important;
    }

    [data-theme="dark"] .card {
      background-color: #1F2937 !important;
      color: #F9FAFB !important;
    }

    [data-theme="dark"] .table {
      background-color: #1F2937 !important;
      color: #F9FAFB !important;
    }

    [data-theme="dark"] .table th {
      background-color: #374151 !important;
      color: #F9FAFB !important;
      border-color: #4B5563 !important;
    }

    [data-theme="dark"] .table td {
      background-color: #1F2937 !important;
      color: #F9FAFB !important;
      border-color: #4B5563 !important;
    }

    [data-theme="dark"] .form-control {
      background-color: #4B5563 !important;
      color: #F9FAFB !important;
      border-color: #6B7280 !important;
    }

    [data-theme="dark"] .form-control:focus {
      background-color: #4B5563 !important;
      color: #F9FAFB !important;
      border-color: #8B5CF6 !important;
    }

    [data-theme="dark"] .btn-primary {
      background-color: #3B82F6 !important;
      border-color: #3B82F6 !important;
    }

    [data-theme="dark"] .btn-success {
      background-color: #10B981 !important;
      border-color: #10B981 !important;
    }

    [data-theme="dark"] .btn-danger {
      background-color: #DC2626 !important;
      border-color: #DC2626 !important;
    }

    [data-theme="dark"] .alert-primary {
      background-color: #1E40AF !important;
      border-color: #3B82F6 !important;
      color: #DBEAFE !important;
    }

    [data-theme="dark"] .modal-content {
      background-color: #1F2937 !important;
      color: #F9FAFB !important;
    }

    [data-theme="dark"] .modal-header {
      border-bottom-color: #4B5563 !important;
    }

    [data-theme="dark"] .modal-footer {
      border-top-color: #4B5563 !important;
    }
    </style>
</head>

<body>
    <div class="container-scroller">
        <%- include('../partials/_navbar', { isAdmin: isAdmin, isUser: isUser, bg_result: bg_result, totalNotifactions: totalNotifactions, password_datass: password_datass }) %>
        
        <div class="container-fluid page-body-wrapper">
            <%- include('../partials/Sidebar', { isAdmin: isAdmin, isUser: isUser }) %>
            
            <div class="main-panel">
                <div class="content-wrapper">
                    <div class="card">
                        <div class="card-header">
                            <i class="fas fa-tools me-2"></i>
                            Assign Equipment Management
                        </div>
                        
                        <div class="card-body">
                            <!-- Tab Navigation -->
                            <div class="tab-container">
                                <button class="tab-btn active" data-tab="fibre">
                                    <i class="fas fa-network-wired me-2"></i>Fibre Users
                                </button>
                                <button class="tab-btn" data-tab="wireless">
                                    <i class="fas fa-wifi me-2"></i>Wireless Users
                                </button>
                            </div>

                            <!-- Fibre Section -->
                            <div id="fibre-section" class="section active">
                                <div class="search-container">
                                    <div class="search-box">
                                        <i class="fas fa-search"></i>
                                        <input type="text" class="search-input" id="fibre-id-search" placeholder="Search by ID...">
                                    </div>
                                    <div class="search-box">
                                        <i class="fas fa-envelope"></i>
                                        <input type="text" class="search-input" id="fibre-email-search" placeholder="Search by email...">
                                    </div>
                                </div>

                                <div id="fibre-users-container">
                                    <!-- Desktop Table View -->
                                    <div class="desktop-table">
                                        <table class="equipment-table" id="fibre-table">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>Email</th>
                                                    <th>Equipment</th>
                                                    <th>Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody id="fibre-table-body">
                                                <!-- Fibre table rows will be populated by JavaScript -->
                                            </tbody>
                                        </table>
                                    </div>
                                    
                                    <!-- Mobile Card View -->
                                    <div class="user-grid" id="fibre-user-grid">
                                        <!-- Fibre user cards will be populated by JavaScript -->
                                    </div>
                                    
                                    <div class="pagination-container" id="fibre-pagination">
                                        <!-- Pagination will be populated by JavaScript -->
                                    </div>
                                </div>
                            </div>

                            <!-- Wireless Section -->
                            <div id="wireless-section" class="section">
                                <div class="search-container">
                                    <div class="search-box">
                                        <i class="fas fa-search"></i>
                                        <input type="text" class="search-input" id="wireless-id-search" placeholder="Search by ID...">
                                    </div>
                                    <div class="search-box">
                                        <i class="fas fa-envelope"></i>
                                        <input type="text" class="search-input" id="wireless-email-search" placeholder="Search by email...">
                                    </div>
                                </div>

                                <div id="wireless-users-container">
                                    <!-- Desktop Table View -->
                                    <div class="desktop-table">
                                        <table class="equipment-table" id="wireless-table">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>Email</th>
                                                    <th>Equipment</th>
                                                    <th>Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody id="wireless-table-body">
                                                <!-- Wireless table rows will be populated by JavaScript -->
                                            </tbody>
                                        </table>
                                    </div>
                                    
                                    <!-- Mobile Card View -->
                                    <div class="user-grid" id="wireless-user-grid">
                                        <!-- Wireless user cards will be populated by JavaScript -->
                                    </div>
                                    
                                    <div class="pagination-container" id="wireless-pagination">
                                        <!-- Pagination will be populated by JavaScript -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap & jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Template Scripts -->
    <script src="/vendors/js/vendor.bundle.base.js"></script>
    <script src="/js/off-canvas.js"></script>
    <script src="/js/hoverable-collapse.js"></script>
    <script src="/js/template.js"></script>
    <script src="/js/settings.js"></script>
    <script src="/js/dashboard.js"></script>

    <script>
        // Data from server
        const submissions = <%- JSON.stringify(submissions) %>;
        const wirelessForms = <%- JSON.stringify(wirelessForms) %>;
        const assignedEquipment = <%- JSON.stringify(assigned_equipment) %>;
        
        // Pagination settings
        const ITEMS_PER_PAGE = 6;
        
        // Current page tracking
        let currentPages = {
            fibre: 1,
            wireless: 1
        };
        
        // Filtered data
        let filteredData = {
            fibre: [],
            wireless: []
        };

        // Initialize the app
        document.addEventListener('DOMContentLoaded', function() {
            initializeData();
            initializeTabs();
            initializeSearch();
            renderUsers('fibre');
        });

        function initializeData() {
            // Debug: Log the data to see what we have
            console.log('Submissions (Fibre):', submissions);
            console.log('Wireless Forms:', wirelessForms);
            console.log('Assigned Equipment:', assignedEquipment);
            
            // Process data by type
            // For fibre: use submissions data (from fibre_submissions table)
            filteredData.fibre = submissions || [];
            
            // For wireless: use wirelessForms data (from wireless_forms table)
            filteredData.wireless = wirelessForms || [];
            
            // Debug: Log filtered data
            console.log('Filtered Fibre Users:', filteredData.fibre.length);
            console.log('Filtered Wireless Users:', filteredData.wireless.length);
            console.log('Fibre Data:', filteredData.fibre);
            console.log('Wireless Data:', filteredData.wireless);
        }

        function initializeTabs() {
            const tabBtns = document.querySelectorAll('.tab-btn');
            const sections = document.querySelectorAll('.section');

            tabBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const tabType = this.dataset.tab;
                    
                    // Update active tab
                    tabBtns.forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Update active section
                    sections.forEach(s => s.classList.remove('active'));
                    document.getElementById(`${tabType}-section`).classList.add('active');
                    
                    // Reset search and render users
                    document.getElementById(`${tabType}-id-search`).value = '';
                    document.getElementById(`${tabType}-email-search`).value = '';
                    currentPages[tabType] = 1;
                    renderUsers(tabType);
                });
            });
        }

        function initializeSearch() {
            // Fibre search
            const fibreIdSearch = document.getElementById('fibre-id-search');
            const fibreEmailSearch = document.getElementById('fibre-email-search');
            
            fibreIdSearch.addEventListener('input', () => performSearch('fibre'));
            fibreEmailSearch.addEventListener('input', () => performSearch('fibre'));
            
            // Wireless search
            const wirelessIdSearch = document.getElementById('wireless-id-search');
            const wirelessEmailSearch = document.getElementById('wireless-email-search');
            
            wirelessIdSearch.addEventListener('input', () => performSearch('wireless'));
            wirelessEmailSearch.addEventListener('input', () => performSearch('wireless'));
        }

        function performSearch(type) {
            const idSearch = document.getElementById(`${type}-id-search`).value.toLowerCase();
            const emailSearch = document.getElementById(`${type}-email-search`).value.toLowerCase();
            
            // Get original data based on type
            let originalData;
            if (type === 'fibre') {
                originalData = submissions || [];
            } else {
                originalData = wirelessForms || [];
            }
            
            // Filter based on search criteria
            filteredData[type] = originalData.filter(s => {
                const idMatch = s.id.toString().includes(idSearch);
                const emailMatch = s.email ? s.email.toLowerCase().includes(emailSearch) : true;
                return idMatch && emailMatch;
            });
            
            currentPages[type] = 1;
            renderUsers(type);
        }

        function renderUsers(type) {
            const cardContainer = document.getElementById(`${type}-user-grid`);
            const tableBody = document.getElementById(`${type}-table-body`);
            const paginationContainer = document.getElementById(`${type}-pagination`);
            
            const data = filteredData[type];
            const totalPages = Math.ceil(data.length / ITEMS_PER_PAGE);
            const currentPage = currentPages[type];
            
            // Calculate pagination
            const startIdx = (currentPage - 1) * ITEMS_PER_PAGE;
            const endIdx = startIdx + ITEMS_PER_PAGE;
            const pageData = data.slice(startIdx, endIdx);
            
            // Render users
            if (pageData.length === 0) {
                // Empty state for cards
                cardContainer.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-users"></i>
                        <h3>No users found</h3>
                        <p>Try adjusting your search criteria</p>
                    </div>
                `;
                
                // Empty state for table
                tableBody.innerHTML = `
                    <tr>
                        <td colspan="4" style="text-align: center; padding: 40px; color: var(--gray);">
                            <i class="fas fa-users" style="font-size: 2rem; margin-bottom: 10px; display: block;"></i>
                            No users found
                        </td>
                    </tr>
                `;
            } else {
                // Render cards for mobile
                cardContainer.innerHTML = pageData.map((user, index) => createUserCard(user, type, startIdx + index + 1)).join('');
                
                // Render table rows for desktop
                tableBody.innerHTML = pageData.map((user, index) => createTableRow(user, type, startIdx + index + 1)).join('');
            }
            
            // Render pagination
            renderPagination(type, currentPage, totalPages, data.length);
        }

        function createUserCard(user, type, index) {
            // Get equipment for this user
            const userEquipment = assignedEquipment.filter(eq => 
                eq.submission_id === user.id && eq.submission_type === type
            );
            
            let equipmentRows = '';
            if (userEquipment.length > 0) {
                equipmentRows = userEquipment.map(eq => `
                    <div class="equipment-row">
                        <span class="equipment-name">${eq.equipment_name || 'Unknown Equipment'}</span>
                        <span class="equipment-quantity">${eq.quantity || '-'}</span>
                        ${eq.price ? `<span class="equipment-price">$${eq.price}</span>` : '<span class="equipment-price">-</span>'}
                    </div>
                `).join('');
            } else {
                equipmentRows = '<p style="color: var(--gray); text-align: center; padding: 20px;">No equipment assigned yet</p>';
            }

            // Remove user info section as requested

            return `
                <div class="user-card" data-user-id="${user.id}">
                    <div class="user-card-header">
                        <div>
                            <div class="user-id">#${user.id}</div>
                            <div class="user-email">${user.email || 'No email'}</div>
                        </div>
                        <i class="fas fa-${type === 'fibre' ? 'network-wired' : 'wifi'}"></i>
                    </div>
                    <div class="user-card-body">
                        <div class="equipment-info">
                            <h6 style="margin-bottom: 15px; color: var(--dark); font-weight: 600;">
                                <i class="fas fa-tools me-2"></i>Equipment Details
                            </h6>
                            ${equipmentRows}
                        </div>
                        <div class="user-actions">
                            <button class="btn-action btn-edit" onclick="editUser(${user.id}, '${type}')">
                                <i class="fas fa-edit"></i>Edit
                            </button>
                            <button class="btn-action btn-delete" onclick="deleteUser(${user.id}, '${type}')">
                                <i class="fas fa-trash"></i>Delete
                            </button>
                        </div>
                    </div>
                </div>
            `;
        }

        function createTableRow(user, type, index) {
            // Get equipment for this user
            const userEquipment = assignedEquipment.filter(eq => 
                eq.submission_id === user.id && eq.submission_type === type
            );
            
            let equipmentList = '';
            if (userEquipment.length > 0) {
                equipmentList = userEquipment.map(eq => 
                    `${eq.equipment_name || 'Unknown'} (${eq.quantity || '-'})`
                ).join(', ');
            } else {
                equipmentList = 'No equipment assigned';
            }

            return `
                <tr data-user-id="${user.id}">
                    <td><strong>#${user.id}</strong></td>
                    <td>${user.email || 'No email'}</td>
                    <td>
                        <div style="max-width: 300px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" 
                             title="${equipmentList}">
                            ${equipmentList}
                        </div>
                    </td>
                    <td>
                        <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                            <button class="btn btn-sm btn-warning" onclick="editUser(${user.id}, '${type}')" 
                                    style="padding: 4px 8px; font-size: 0.8rem;">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button class="btn btn-sm btn-danger" onclick="deleteUser(${user.id}, '${type}')" 
                                    style="padding: 4px 8px; font-size: 0.8rem;">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </td>
                </tr>
            `;
        }

        function renderPagination(type, currentPage, totalPages, totalItems) {
            const container = document.getElementById(`${type}-pagination`);
            
            if (totalPages <= 1) {
                container.innerHTML = '';
                return;
            }

            const startItem = ((currentPage - 1) * ITEMS_PER_PAGE) + 1;
            const endItem = Math.min(currentPage * ITEMS_PER_PAGE, totalItems);

            let paginationHTML = `
                <div class="pagination-info">
                    Showing ${startItem}-${endItem} of ${totalItems} users
                </div>
                <div class="pagination-controls">
                    <button class="pagination-btn" ${currentPage === 1 ? 'disabled' : ''} 
                            onclick="changePage('${type}', ${currentPage - 1})">
                        <i class="fas fa-chevron-left"></i> Previous
                    </button>
            `;

            // Page numbers
            const maxVisiblePages = 5;
            let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
            let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
            
            if (endPage - startPage + 1 < maxVisiblePages) {
                startPage = Math.max(1, endPage - maxVisiblePages + 1);
            }

            for (let i = startPage; i <= endPage; i++) {
                paginationHTML += `
                    <button class="pagination-btn ${i === currentPage ? 'active' : ''}" 
                            onclick="changePage('${type}', ${i})">
                        ${i}
                    </button>
                `;
            }

            paginationHTML += `
                    <button class="pagination-btn" ${currentPage === totalPages ? 'disabled' : ''} 
                            onclick="changePage('${type}', ${currentPage + 1})">
                        Next <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            `;

            container.innerHTML = paginationHTML;
        }

        function changePage(type, page) {
            currentPages[type] = page;
            renderUsers(type);
            
            // Smooth scroll to top of section
            document.getElementById(`${type}-section`).scrollIntoView({ 
                behavior: 'smooth', 
                block: 'start' 
            });
        }

        // Action handlers
        function editUser(userId, type) {
            // Find user data
            let user;
            if (type === 'fibre') {
                user = submissions.find(s => s.id === userId);
            } else {
                user = wirelessForms.find(s => s.id === userId);
            }
            
            if (!user) {
                alert('User not found');
                return;
            }
            
            // Show the appropriate edit modal using Bootstrap 5
            const modalId = `editModal${userId}`;
            const modalElement = document.getElementById(modalId);
            
            if (modalElement) {
                const modal = new bootstrap.Modal(modalElement);
                modal.show();
            } else {
                alert('Edit modal not found for this user. Please refresh the page and try again.');
            }
        }

        function deleteUser(userId, type) {
            if (confirm('Are you sure you want to delete this user?')) {
                const endpoint = type === 'fibre' ? `/delete-fibre/${userId}` : `/delete-wireless/${userId}`;
                
                // Create a form and submit it
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = endpoint;
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>

    <!-- Edit Modals for Fibre Users -->
    <% submissions.forEach(s => { %>
        <div class="modal fade" id="editModal<%= s.id %>" tabindex="-1" aria-labelledby="editModalLabel<%= s.id %>" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content" style="background: rgba(255, 255, 255, 0.95); border-radius: 20px; box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15); backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.3);">
                    <form action="/update-fibre/<%= s.id %>" method="POST">
                        <div class="modal-header" style="background: linear-gradient(90deg, #6c5ce7, #a29bfe); color: white; padding: 20px; border-radius: 20px 20px 0 0; margin-bottom: 0; border: none;">
                            <h5 class="modal-title" id="editModalLabel<%= s.id %>" style="margin: 0; font-weight: 600;">
                                <i class="fas fa-edit me-2"></i>Edit Fibre User #<%= s.id %>
                            </h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body" style="padding: 30px;">
                            <div class="row g-3">
                                <!-- Email and Form Type -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="email" class="form-control" name="email" id="email_<%= s.id %>" value="<%= s.email %>" placeholder="Email">
                                        <label for="email_<%= s.id %>">Email</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="formType" id="formType_<%= s.id %>" value="<%= s.formType || 'fibre' %>" placeholder="Form Type">
                                        <label for="formType_<%= s.id %>">Form Type</label>
                                    </div>
                                </div>
                                
                                
                                <!-- Device Information -->  
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <select class="form-select" name="device_label" id="device_label_<%= s.id %>">
                                            <option value="X-pon" <%= s.device_label === 'X-pon' ? 'selected' : '' %>>X-pon</option>
                                            <option value="E-pon" <%= s.device_label === 'E-pon' ? 'selected' : '' %>>E-pon</option>
                                            <option value="G-pon" <%= s.device_label === 'G-pon' ? 'selected' : '' %>>G-pon</option>
                                            <option value="tyty" <%= s.device_label === 'tyty' ? 'selected' : '' %>>tyty</option>
                                            <option value="Other" <%= !['X-pon', 'E-pon', 'G-pon', 'tyty'].includes(s.device_label) ? 'selected' : '' %>>Other</option>
                                        </select>
                                        <label for="device_label_<%= s.id %>">Device Name</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="device_price" id="device_price_<%= s.id %>" value="<%= s.device_price %>" placeholder="Device Price">
                                        <label for="device_price_<%= s.id %>">Device Price</label>
                                    </div>
                                </div>
                                
                                <!-- Fibre Power -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <select class="form-select" name="fibre_power_label" id="fibre_power_label_<%= s.id %>">
                                            <option value="-7 to -10 dBm" <%= s.fibre_power_label === '-7 to -10 dBm' ? 'selected' : '' %>>-7 to -10 dBm</option>
                                            <option value="-11 to -13 dBm" <%= s.fibre_power_label === '-11 to -13 dBm' ? 'selected' : '' %>>-11 to -13 dBm</option>
                                            <option value="-14 to -17 dBm" <%= s.fibre_power_label === '-14 to -17 dBm' ? 'selected' : '' %>>-14 to -17 dBm</option>
                                            <option value="-18 to -21 dBm" <%= s.fibre_power_label === '-18 to -21 dBm' ? 'selected' : '' %>>-18 to -21 dBm</option>
                                            <option value="Custom" <%= !['−7 to -10 dBm', '-11 to -13 dBm', '-14 to -17 dBm', '-18 to -21 dBm'].includes(s.fibre_power_label) ? 'selected' : '' %>>Custom</option>
                                        </select>
                                        <label for="fibre_power_label_<%= s.id %>">Fibre Optical Power</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="fibre_power_price" id="fibre_power_price_<%= s.id %>" value="<%= s.fibre_power_price %>" placeholder="Fiber Wire Price">
                                        <label for="fibre_power_price_<%= s.id %>">Fiber Wire Price</label>
                                    </div>
                                </div>
                                
                                <!-- Fibre Color and Supplying -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <select class="form-select" name="fibre_color_value" id="fibre_color_value_<%= s.id %>">
                                            <option value="Blue" <%= s.fibre_color_value === 'Blue' ? 'selected' : '' %>>Blue</option>
                                            <option value="Orange" <%= s.fibre_color_value === 'Orange' ? 'selected' : '' %>>Orange</option>
                                            <option value="Green" <%= s.fibre_color_value === 'Green' ? 'selected' : '' %>>Green</option>
                                            <option value="Brown" <%= s.fibre_color_value === 'Brown' ? 'selected' : '' %>>Brown</option>
                                            <option value="Gray" <%= s.fibre_color_value === 'Gray' ? 'selected' : '' %>>Gray</option>
                                            <option value="White" <%= s.fibre_color_value === 'White' ? 'selected' : '' %>>White</option>
                                            <option value="Red" <%= s.fibre_color_value === 'Red' ? 'selected' : '' %>>Red</option>
                                            <option value="Black" <%= s.fibre_color_value === 'Black' ? 'selected' : '' %>>Black</option>
                                            <option value="Yellow" <%= s.fibre_color_value === 'Yellow' ? 'selected' : '' %>>Yellow</option>
                                            <option value="Violet" <%= s.fibre_color_value === 'Violet' ? 'selected' : '' %>>Violet</option>
                                            <option value="Rose" <%= s.fibre_color_value === 'Rose' ? 'selected' : '' %>>Rose</option>
                                            <option value="Aqua" <%= s.fibre_color_value === 'Aqua' ? 'selected' : '' %>>Aqua</option>
                                        </select>
                                        <label for="fibre_color_value_<%= s.id %>">Fibre Color</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="fibre_supplying_value" id="fibre_supplying_value_<%= s.id %>" value="<%= s.fibre_supplying_value %>" placeholder="Fibre Supplying">
                                        <label for="fibre_supplying_value_<%= s.id %>">Fibre Supplying</label>
                                    </div>
                                </div>
                                
                                <!-- Cable Information -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="cable_quantity" id="cable_quantity_<%= s.id %>" value="<%= s.cable_quantity %>" placeholder="2 core 100 meter">
                                        <label for="cable_quantity_<%= s.id %>">Cable (Core + Meter)</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="cable_price" id="cable_price_<%= s.id %>" value="<%= s.cable_price %>" placeholder="Cable Price">
                                        <label for="cable_price_<%= s.id %>">Cable Price</label>
                                    </div>
                                </div>
                                
                                <!-- Splitter -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <select class="form-select" name="splitter_value" id="splitter_value_<%= s.id %>">
                                            <option value="2way" <%= s.splitter_value === '2way' ? 'selected' : '' %>>2 Way</option>
                                            <option value="4way" <%= s.splitter_value === '4way' ? 'selected' : '' %>>4 Way</option>
                                            <option value="5/95" <%= s.splitter_value === '5/95' ? 'selected' : '' %>>5/95 Way</option>
                                            <option value="10/90" <%= s.splitter_value === '10/90' ? 'selected' : '' %>>10/90 Way</option>
                                            <option value="20/80" <%= s.splitter_value === '20/80' ? 'selected' : '' %>>20/80 Way</option>
                                            <option value="8way" <%= s.splitter_value === '8way' ? 'selected' : '' %>>8 Way</option>
                                            <option value="Other" <%= !['2way', '4way', '5/95', '10/90', '20/80', '8way'].includes(s.splitter_value) ? 'selected' : '' %>>Other</option>
                                        </select>
                                        <label for="splitter_value_<%= s.id %>">Splitter</label>
                                    </div>
                                </div>
                                
                                <!-- Duck Patti with Dynamic Calculation -->
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control quantity-input" 
                                               name="duck_patti_quantity" 
                                               id="duck_patti_quantity_<%= s.id %>" 
                                               value="<%= s.duck_patti_quantity %>" 
                                               placeholder="Duck Patti Quantity"
                                               data-price-target="duck_patti_price_<%= s.id %>"
                                               data-total-target="duck_patti_total_<%= s.id %>">
                                        <label for="duck_patti_quantity_<%= s.id %>">Duck Patti Quantity</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control price-input" 
                                               name="duck_patti_price" 
                                               id="duck_patti_price_<%= s.id %>" 
                                               value="<%= s.duck_patti_price %>" 
                                               placeholder="Duck Patti Unit Price"
                                               data-quantity-target="duck_patti_quantity_<%= s.id %>"
                                               data-total-target="duck_patti_total_<%= s.id %>">
                                        <label for="duck_patti_price_<%= s.id %>">Duck Patti Unit Price</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control total-display" 
                                               name="duck_patti_total" 
                                               id="duck_patti_total_<%= s.id %>" 
                                               readonly
                                               placeholder="Auto Calculated Total"
                                               style="background-color: #e8f5e8; font-weight: bold; color: #2e7d32;">
                                        <label for="duck_patti_total_<%= s.id %>">Duck Patti Total</label>
                                    </div>
                                </div>
                                
                                <!-- Patch Card with Dynamic Calculation -->
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control quantity-input" 
                                               name="patch_card_quantity" 
                                               id="patch_card_quantity_<%= s.id %>" 
                                               value="<%= s.patch_card_quantity %>" 
                                               placeholder="Patch Card Quantity"
                                               data-price-target="patch_card_price_<%= s.id %>"
                                               data-total-target="patch_card_total_<%= s.id %>">
                                        <label for="patch_card_quantity_<%= s.id %>">Patch Card Quantity</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control price-input" 
                                               name="patch_card_price" 
                                               id="patch_card_price_<%= s.id %>" 
                                               value="<%= s.patch_card_price %>" 
                                               placeholder="Patch Card Unit Price"
                                               data-quantity-target="patch_card_quantity_<%= s.id %>"
                                               data-total-target="patch_card_total_<%= s.id %>">
                                        <label for="patch_card_price_<%= s.id %>">Patch Card Unit Price</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control total-display" 
                                               name="patch_card_total" 
                                               id="patch_card_total_<%= s.id %>" 
                                               readonly
                                               placeholder="Auto Calculated Total"
                                               style="background-color: #e8f5e8; font-weight: bold; color: #2e7d32;">
                                        <label for="patch_card_total_<%= s.id %>">Patch Card Total</label>
                                    </div>
                                </div>

                                <!-- Package Selection -->
                                <div class="col-md-6 mt-4">
                                    <div class="form-floating">
                                        <select class="form-select" name="selected_package" id="selected_package_<%= s.id %>" onchange="updatePackagePrice('<%= s.id %>')" style="border: 2px solid #17a2b8;">
                                            <option value="">Select Package</option>
                                            <% if (packages && Array.isArray(packages) && packages.length > 0) { %>
                                                <% packages.forEach(function(pkg) { %>
                                                    <option value="<%= pkg.id %>" data-price="<%= pkg.Price || 0 %>">
                                                        <%= pkg.Package || 'Unnamed Package' %> - Rs<%= pkg.Price || 0 %>
                                                    </option>
                                                <% }); %>
                                            <% } else { %>
                                                <option value="" disabled>No packages available</option>
                                            <% } %>
                                        </select>
                                        <label for="selected_package_<%= s.id %>">Package Name</label>
                                    </div>
                                </div>
                                <div class="col-md-6 mt-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control total-input" name="package_price" id="package_price_<%= s.id %>" placeholder="Package Price" readonly style="background: #e8f5e8; border: 2px solid #28a745; font-weight: bold;">
                                        <label for="package_price_<%= s.id %>">Package Price (Rs)</label>
                                    </div>
                                </div>
                                

                            </div>
                        </div>
                        <div class="modal-footer" style="padding: 20px 30px; border: none;">
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal" style="background-color: #dc3545; border: none; border-radius: 25px;">
                                <i class="fas fa-times me-2"></i>Cancel
                            </button>
                            <button type="submit" class="btn btn-success" style="background-color: #28a745; border: none; border-radius: 25px;">
                                <i class="fas fa-save me-2"></i>Update User
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    <% }); %>

    <!-- Edit Modals for Wireless Users -->
    <% wirelessForms.forEach(w => { %>
        <div class="modal fade" id="editModal<%= w.id %>" tabindex="-1" aria-labelledby="editModalLabel<%= w.id %>" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content" style="background: rgba(255, 255, 255, 0.95); border-radius: 20px; box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15); backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.3);">
                    <form action="/update-wireless/<%= w.id %>" method="POST">
                        <div class="modal-header" style="background: linear-gradient(90deg, #00cec9, #74b9ff); color: white; padding: 20px; border-radius: 20px 20px 0 0; margin-bottom: 0; border: none;">
                            <h5 class="modal-title" id="editModalLabel<%= w.id %>" style="margin: 0; font-weight: 600;">
                                <i class="fas fa-wifi me-2"></i>Edit Wireless User #<%= w.id %>
                            </h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body" style="padding: 30px;">
                            <div class="row g-3">
                                <!-- Email and Form Type -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="email" class="form-control" name="email" id="email_<%= w.id %>" value="<%= w.email %>" placeholder="Email">
                                        <label for="email_<%= w.id %>">Email</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="formType" id="formType_<%= w.id %>" value="<%= w.formType || 'wireless' %>" placeholder="Form Type">
                                        <label for="formType_<%= w.id %>">Form Type</label>
                                    </div>
                                </div>
                                
                                
                                <!-- Cat 6 Wire -->
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control quantity-input" name="cat6_meter" id="cat6_meter_<%= w.id %>" value="<%= w.cat6_meter %>" placeholder="Cat 6 Meters" data-price-target="cat6_price_<%= w.id %>" data-total-target="cat6_total_<%= w.id %>" style="border: 2px solid #007bff;">
                                        <label for="cat6_meter_<%= w.id %>">Cat 6 Wire (Meters)</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control price-input" name="cat6_price" id="cat6_price_<%= w.id %>" value="<%= w.cat6_price %>" placeholder="Cat 6 Price" data-quantity-target="cat6_meter_<%= w.id %>" data-total-target="cat6_total_<%= w.id %>" style="border: 2px solid #007bff;">
                                        <label for="cat6_price_<%= w.id %>">Cat 6 Price (Rs)</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control total-input" name="cat6_total" id="cat6_total_<%= w.id %>" placeholder="Total" readonly style="background: #e8f5e8; border: 2px solid #28a745; font-weight: bold;">
                                        <label for="cat6_total_<%= w.id %>">Cat 6 Total (Rs)</label>
                                    </div>
                                </div>
                                
                                <!-- Clips -->
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control quantity-input" name="clips_count" id="clips_count_<%= w.id %>" value="<%= w.clips_count %>" placeholder="Clips Count" data-price-target="clips_price_<%= w.id %>" data-total-target="clips_total_<%= w.id %>" style="border: 2px solid #007bff;">
                                        <label for="clips_count_<%= w.id %>">Number of Clips</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control price-input" name="clips_price" id="clips_price_<%= w.id %>" value="<%= w.clips_price %>" placeholder="Clips Price" data-quantity-target="clips_count_<%= w.id %>" data-total-target="clips_total_<%= w.id %>" style="border: 2px solid #007bff;">
                                        <label for="clips_price_<%= w.id %>">Clips Price (Rs)</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control total-input" name="clips_total" id="clips_total_<%= w.id %>" placeholder="Total" readonly style="background: #e8f5e8; border: 2px solid #28a745; font-weight: bold;">
                                        <label for="clips_total_<%= w.id %>">Clips Total (Rs)</label>
                                    </div>
                                </div>
                                
                                <!-- Package Selection -->
                                <div class="col-md-6 mt-4">
                                    <div class="form-floating">
                                        <select class="form-select" name="selected_package" id="selected_package_<%= w.id %>" onchange="updatePackagePrice('<%= w.id %>')" style="border: 2px solid #17a2b8;">
                                            <option value="">Select Package</option>
                                            <% if (packages && Array.isArray(packages) && packages.length > 0) { %>
                                                <% packages.forEach(function(pkg) { %>
                                                    <option value="<%= pkg.id %>" data-price="<%= pkg.Price || 0 %>">
                                                        <%= pkg.Package || 'Unnamed Package' %> - Rs<%= pkg.Price || 0 %>
                                                    </option>
                                                <% }); %>
                                            <% } else { %>
                                                <option value="" disabled>No packages available</option>
                                            <% } %>
                                        </select>
                                        <label for="selected_package_<%= w.id %>">Package Name</label>
                                    </div>
                                </div>
                                <div class="col-md-6 mt-4">
                                    <div class="form-floating">
                                        <input type="number" class="form-control total-input" name="package_price" id="package_price_<%= w.id %>" placeholder="Package Price" readonly style="background: #e8f5e8; border: 2px solid #28a745; font-weight: bold;">
                                        <label for="package_price_<%= w.id %>">Package Price (Rs)</label>
                                    </div>
                                </div>
                                
                                <!-- Raval Bold -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <select class="form-select" name="raval_bold_pair" id="raval_bold_pair_<%= w.id %>">
                                            <% for(let i = 1; i <= 10; i++) { %>
                                                <option value="<%= i %>" <%= w.raval_bold_pair == i ? 'selected' : '' %>><%= i %> Pair</option>
                                            <% } %>
                                        </select>
                                        <label for="raval_bold_pair_<%= w.id %>">Raval Bold Pair</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="number" class="form-control" name="raval_bold_price" id="raval_bold_price_<%= w.id %>" value="<%= w.raval_bold_price %>" placeholder="Raval Bold Price">
                                        <label for="raval_bold_price_<%= w.id %>">Raval Bold Price (Rs)</label>
                                    </div>
                                </div>
                                
                                <!-- Poll -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <select class="form-select" name="poll_height" id="poll_height_<%= w.id %>">
                                            <% ['10 feet', '20 feet', '30 feet', '40 feet', '50 feet'].forEach(height => { %>
                                                <option value="<%= height %>" <%= w.poll_height === height ? 'selected' : '' %>><%= height %></option>
                                            <% }); %>
                                        </select>
                                        <label for="poll_height_<%= w.id %>">Poll Height</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="number" class="form-control" name="poll_price" id="poll_price_<%= w.id %>" value="<%= w.poll_price %>" placeholder="Poll Price">
                                        <label for="poll_price_<%= w.id %>">Poll Price (Rs)</label>
                                    </div>
                                </div>
                                
                                <!-- Signal Strength and Tower Height -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="signal_strength" id="signal_strength_<%= w.id %>" value="<%= w.signal_strength %>" placeholder="Signal Strength">
                                        <label for="signal_strength_<%= w.id %>">Signal Strength (dBi)</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <select class="form-select" name="home_tower_height" id="home_tower_height_<%= w.id %>">
                                            <% for(let i = 20; i <= 70; i += 5) { %>
                                                <option value="<%= i %>-<%= i+5 %>" <%= w.home_tower_height === `${i}-${i+5}` ? 'selected' : '' %>><%= i %>-<%= i+5 %></option>
                                            <% } %>
                                        </select>
                                        <label for="home_tower_height_<%= w.id %>">Home Tower Height</label>
                                    </div>
                                </div>
                                
                                <!-- Signal Receiver -->
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <select class="form-select" name="signal_receiver" id="signal_receiver_<%= w.id %>">
                                            <% ['Light Beam-M5', 'Light Beam-AC', 'Power Beam-M5', 'Power Beam-AC', 'Nano-station', 'Outdoor Router', 'Other'].forEach(r => { %>
                                                <option value="<%= r %>" <%= w.signal_receiver === r ? 'selected' : '' %>><%= r %></option>
                                            <% }); %>
                                        </select>
                                        <label for="signal_receiver_<%= w.id %>">Signal Receiver</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="receiver_price" id="receiver_price_<%= w.id %>" value="<%= w.receiver_price %>" placeholder="Receiver Price">
                                        <label for="receiver_price_<%= w.id %>">Receiver Price (Rs)</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="receiver_model" id="receiver_model_<%= w.id %>" value="<%= w.receiver_model %>" placeholder="Receiver Model">
                                        <label for="receiver_model_<%= w.id %>">Receiver Model</label>
                                    </div>
                                </div>
                                
                                <!-- WiFi ONU -->
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <select class="form-select" name="wifi_onu" id="wifi_onu_<%= w.id %>">
                                            <% ['TP-Link', 'China', 'Net gear', 'Other'].forEach(o => { %>
                                                <option value="<%= o %>" <%= w.wifi_onu === o ? 'selected' : '' %>><%= o %></option>
                                            <% }); %>
                                        </select>
                                        <label for="wifi_onu_<%= w.id %>">WiFi ONU</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="onu_price" id="onu_price_<%= w.id %>" value="<%= w.onu_price %>" placeholder="ONU Price">
                                        <label for="onu_price_<%= w.id %>">ONU Price (Rs)</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="onu_model" id="onu_model_<%= w.id %>" value="<%= w.onu_model %>" placeholder="ONU Model">
                                        <label for="onu_model_<%= w.id %>">ONU Model</label>
                                    </div>
                                </div>
                                
                                <!-- Tower AP Device -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <select class="form-select" name="tower_ap_device" id="tower_ap_device_<%= w.id %>">
                                            <% ['Fibrish', 'Click Opticx', 'D-11', 'Other'].forEach(d => { %>
                                                <option value="<%= d %>" <%= w.tower_ap_device === d ? 'selected' : '' %>><%= d %></option>
                                            <% }); %>
                                        </select>
                                        <label for="tower_ap_device_<%= w.id %>">Tower AP Device</label>
                                    </div>
                                </div>
                                
                                <!-- Optional Notes -->
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="wireless_field" id="wireless_field_<%= w.id %>" value="<%= w.wireless_field %>" placeholder="Optional Notes">
                                        <label for="wireless_field_<%= w.id %>">Optional Notes</label>
                                    </div>
                                </div>
                            </div>
                            
                            
                            <!-- Custom Form Fields Section -->
                            <div class="row mt-4">
                                <div class="col-12">
                                    <div class="card" style="background: rgba(255, 248, 220, 0.8); border: 1px solid #ffc107; border-radius: 15px;">
                                        <div class="card-header" style="background: rgba(255, 193, 7, 0.1); border-bottom: 1px solid #ffc107; border-radius: 15px 15px 0 0;">
                                            <h6 class="mb-0" style="color: #856404;">
                                                <i class="fas fa-plus-square me-2"></i>Custom Form Fields
                                            </h6>
                                        </div>
                                        <div class="card-body">
                                            <div id="custom-form-fields-<%= w.id %>" class="custom-form-container">
                                                <!-- Custom form fields will be added here -->
                                            </div>
                                            <button type="button" class="btn btn-outline-warning btn-sm mt-3" onclick="addCustomFormField('<%= w.id %>', 'wireless')" style="border-radius: 20px;">
                                                <i class="fas fa-plus me-2"></i>Add New Form Field
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Grand Total Display -->
                            <div class="row mt-3">
                                <div class="col-12">
                                    <div class="card" style="background: linear-gradient(45deg, #00b894, #00cec9); border: none; border-radius: 15px;">
                                        <div class="card-body text-center" style="padding: 15px;">
                                            <h5 class="mb-0" style="color: white; font-weight: 600;">
                                                <i class="fas fa-calculator me-2"></i>Grand Total: Rs <span id="grand-total-<%= w.id %>" style="font-size: 1.2em; font-weight: bold;">0</span>
                                            </h5>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="padding: 20px 30px; border: none;">
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal" style="background-color: #dc3545; border: none; border-radius: 25px;">
                                <i class="fas fa-times me-2"></i>Cancel
                            </button>
                            <button type="submit" class="btn btn-success" style="background-color: #28a745; border: none; border-radius: 25px;">
                                <i class="fas fa-save me-2"></i>Update User
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    <% }); %>

    <script>
        // Dynamic pricing calculation system

        // Initialize calculations when document is ready
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Initializing dynamic pricing system...');
            initializePricingCalculations();
            
            // Initialize calculations for all existing modals
            document.querySelectorAll('.modal').forEach(modal => {
                const modalId = modal.id.replace('editModal', '');
                if (modalId) {
                    calculateGrandTotal(modalId);
                }
            });
        });

        function initializePricingCalculations() {
            // Add event listeners for all quantity and price inputs
            document.addEventListener('input', function(e) {
                if (e.target.classList.contains('quantity-input') || e.target.classList.contains('price-input')) {
                    console.log('Input detected on:', e.target.id);
                    calculateTotal(e.target);
                }
            });

            document.addEventListener('keyup', function(e) {
                if (e.target.classList.contains('quantity-input') || e.target.classList.contains('price-input')) {
                    console.log('Keyup detected on:', e.target.id);
                    calculateTotal(e.target);
                }
            });

            document.addEventListener('change', function(e) {
                if (e.target.classList.contains('quantity-input') || e.target.classList.contains('price-input')) {
                    console.log('Change detected on:', e.target.id);
                    calculateTotal(e.target);
                }
            });
        }

        function calculateTotal(inputElement) {
            const priceTarget = inputElement.dataset.priceTarget;
            const quantityTarget = inputElement.dataset.quantityTarget;
            const totalTarget = inputElement.dataset.totalTarget;

            let quantityInput, priceInput, totalInput;

            if (inputElement.classList.contains('quantity-input')) {
                quantityInput = inputElement;
                priceInput = document.getElementById(priceTarget);
                totalInput = document.getElementById(totalTarget);
            } else {
                priceInput = inputElement;
                quantityInput = document.getElementById(quantityTarget);
                totalInput = document.getElementById(totalTarget);
            }

            if (quantityInput && priceInput && totalInput) {
                const quantity = parseFloat(quantityInput.value) || 0;
                const price = parseFloat(priceInput.value) || 0;
                const total = quantity * price;

                totalInput.value = total.toFixed(2);
                console.log(`Calculation: ${quantity} × ${price} = ${total}`);

                // Extract modal ID from any of the inputs
                const modalId = totalInput.id.split('_').pop();
                calculateGrandTotal(modalId);

                // Add visual feedback
                totalInput.style.background = total > 0 ? '#e8f5e8' : '#fff';
                totalInput.style.color = total > 0 ? '#28a745' : '#333';
            }
        }

        function calculateGrandTotal(modalId) {
            console.log('Calculating grand total for modal:', modalId);
            let grandTotal = 0;

            // Find all total inputs in this specific modal
            const modal = document.getElementById('editModal' + modalId);
            if (modal) {
                const totalInputs = modal.querySelectorAll('.total-input');
                console.log('Found total inputs:', totalInputs.length);

                totalInputs.forEach(input => {
                    const value = parseFloat(input.value) || 0;
                    grandTotal += value;
                    console.log(`Adding ${value} to grand total`);
                });

                // Update grand total display
                const grandTotalDisplay = document.getElementById('grand-total-' + modalId);
                if (grandTotalDisplay) {
                    grandTotalDisplay.textContent = grandTotal.toFixed(2);
                    console.log('Updated grand total to:', grandTotal.toFixed(2));
                }

                // Save to localStorage for profile display
                saveEquipmentCost(modalId, grandTotal);
            }
        }

        function saveEquipmentCost(userId, total) {
            // Get detailed equipment data for this user
            const modal = document.getElementById('editModal' + userId);
            if (!modal) return;

            const equipmentDetails = {};
            
            // Get Duck Patti details (for fiber users)
            const duckPattiQty = modal.querySelector(`#duck_patti_quantity_${userId}`);
            const duckPattiPrice = modal.querySelector(`#duck_patti_price_${userId}`);
            const duckPattiTotal = modal.querySelector(`#duck_patti_total_${userId}`);
            
            if (duckPattiQty && duckPattiPrice && duckPattiTotal) {
                equipmentDetails.duck_patti = {
                    quantity: parseFloat(duckPattiQty.value) || 0,
                    price: parseFloat(duckPattiPrice.value) || 0,
                    total: parseFloat(duckPattiTotal.value) || 0
                };
            }

            // Get Patch Card details (for fiber users)
            const patchCardQty = modal.querySelector(`#patch_card_quantity_${userId}`);
            const patchCardPrice = modal.querySelector(`#patch_card_price_${userId}`);
            const patchCardTotal = modal.querySelector(`#patch_card_total_${userId}`);
            
            if (patchCardQty && patchCardPrice && patchCardTotal) {
                equipmentDetails.patch_card = {
                    quantity: parseFloat(patchCardQty.value) || 0,
                    price: parseFloat(patchCardPrice.value) || 0,
                    total: parseFloat(patchCardTotal.value) || 0
                };
            }

            // Get Cat 6 details (for wireless users)
            const cat6Qty = modal.querySelector(`#cat6_meter_${userId}`);
            const cat6Price = modal.querySelector(`#cat6_price_${userId}`);
            const cat6Total = modal.querySelector(`#cat6_total_${userId}`);
            
            if (cat6Qty && cat6Price && cat6Total) {
                equipmentDetails.cat6_wire = {
                    quantity: parseFloat(cat6Qty.value) || 0,
                    price: parseFloat(cat6Price.value) || 0,
                    total: parseFloat(cat6Total.value) || 0
                };
            }

            // Get Clips details (for wireless users)
            const clipsQty = modal.querySelector(`#clips_count_${userId}`);
            const clipsPrice = modal.querySelector(`#clips_price_${userId}`);
            const clipsTotal = modal.querySelector(`#clips_total_${userId}`);
            
            if (clipsQty && clipsPrice && clipsTotal) {
                equipmentDetails.clips = {
                    quantity: parseFloat(clipsQty.value) || 0,
                    price: parseFloat(clipsPrice.value) || 0,
                    total: parseFloat(clipsTotal.value) || 0
                };
            }

            // Get dynamic equipment fields
            const dynamicFields = modal.querySelectorAll('.dynamic-field');
            dynamicFields.forEach((field, index) => {
                const name = field.querySelector('input[name^="custom_equipment_name"]')?.value;
                const qty = field.querySelector('.quantity-input')?.value;
                const price = field.querySelector('.price-input')?.value;
                const total = field.querySelector('.total-input')?.value;
                
                if (name && qty && price) {
                    equipmentDetails[`custom_${index + 1}`] = {
                        name: name,
                        quantity: parseFloat(qty) || 0,
                        price: parseFloat(price) || 0,
                        total: parseFloat(total) || 0
                    };
                }
            });

            // Save to localStorage
            const costs = JSON.parse(localStorage.getItem('equipmentCosts') || '{}');
            costs[userId] = {
                grandTotal: total,
                details: equipmentDetails,
                lastUpdated: new Date().toISOString()
            };
            localStorage.setItem('equipmentCosts', JSON.stringify(costs));
            console.log('Saved detailed equipment cost for user', userId, ':', costs[userId]);
        }



        function showToast(message, type = 'info') {
            // Create toast if it doesn't exist
            let toastContainer = document.getElementById('toast-container');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.id = 'toast-container';
                toastContainer.style.cssText = `
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    z-index: 9999;
                `;
                document.body.appendChild(toastContainer);
            }

            const toastId = 'toast-' + Date.now();
            const bgColor = type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8';
            
            const toast = document.createElement('div');
            toast.id = toastId;
            toast.style.cssText = `
                background: ${bgColor};
                color: white;
                padding: 12px 20px;
                border-radius: 8px;
                margin-bottom: 10px;
                box-shadow: 0 4px 12px rgba(0,0,0,0.3);
                transform: translateX(100%);
                transition: transform 0.3s ease;
                font-weight: 500;
            `;
            toast.innerHTML = `<i class="fas fa-${type === 'success' ? 'check' : type === 'error' ? 'times' : 'info'}-circle me-2"></i>${message}`;

            toastContainer.appendChild(toast);

            // Animate in
            setTimeout(() => {
                toast.style.transform = 'translateX(0)';
            }, 100);

            // Remove after 3 seconds
            setTimeout(() => {
                toast.style.transform = 'translateX(100%)';
                setTimeout(() => {
                    if (toast.parentNode) {
                        toast.parentNode.removeChild(toast);
                    }
                }, 300);
            }, 3000);
        }

        // Modal event listeners for recalculation when opened
        document.addEventListener('shown.bs.modal', function(e) {
            const modalId = e.target.id.replace('editModal', '');
            if (modalId) {
                console.log('Modal opened:', modalId);
                setTimeout(() => {
                    calculateGrandTotal(modalId);
                }, 100);
            }
        });

        // Custom Form Field Management
        let customFieldCounter = 0;

        function addCustomFormField(modalId, type) {
            console.log('Adding custom form field for modal:', modalId, 'type:', type);
            
            // Ask for field name first
            const fieldName = prompt('Enter the field name (e.g., "Phone Number", "Special Instructions"):');
            if (!fieldName || fieldName.trim() === '') {
                showToast('Field name is required!', 'error');
                return;
            }
            
            customFieldCounter++;
            
            const container = document.getElementById('custom-form-fields-' + modalId);
            if (!container) {
                console.error('Custom form field container not found for modal:', modalId);
                return;
            }

            const fieldId = `custom_form_field_${modalId}_${customFieldCounter}`;
            const cleanFieldName = fieldName.trim();
            
            // Create field type options
            const fieldTypes = [
                { value: 'text', label: 'Text Input', icon: 'fas fa-font' },
                { value: 'number', label: 'Number Input', icon: 'fas fa-hashtag' },
                { value: 'email', label: 'Email Input', icon: 'fas fa-envelope' },
                { value: 'tel', label: 'Phone Input', icon: 'fas fa-phone' },
                { value: 'url', label: 'URL Input', icon: 'fas fa-link' },
                { value: 'date', label: 'Date Input', icon: 'fas fa-calendar' },
                { value: 'textarea', label: 'Text Area', icon: 'fas fa-align-left' },
                { value: 'select', label: 'Dropdown Select', icon: 'fas fa-list' }
            ];

            let fieldTypeOptions = '';
            fieldTypes.forEach(fieldType => {
                fieldTypeOptions += `<option value="${fieldType.value}">${fieldType.label}</option>`;
            });

            const fieldHtml = `
                <div class="row mb-3 custom-form-field" id="${fieldId}" style="border: 2px solid #ffc107; border-radius: 15px; padding: 20px; background: linear-gradient(45deg, rgba(255, 248, 220, 0.8), rgba(255, 235, 59, 0.1)); box-shadow: 0 4px 15px rgba(255, 193, 7, 0.2);">
                    <div class="col-12 mb-3">
                        <div class="d-flex align-items-center justify-content-between">
                            <h6 class="mb-0 text-warning">
                                <i class="fas fa-plus-square me-2"></i>Custom Field: <span class="text-dark">${cleanFieldName}</span>
                            </h6>
                            <button type="button" class="btn btn-danger btn-sm" onclick="removeCustomFormField('${fieldId}')" style="border-radius: 20px;">
                                <i class="fas fa-trash me-1"></i>Remove
                            </button>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" name="custom_field_label_${customFieldCounter}" value="${cleanFieldName}" placeholder="Field Label" required style="border: 2px solid #17a2b8; background: rgba(255, 255, 255, 0.9);">
                            <label><i class="fas fa-tag me-1"></i>Field Label</label>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <select class="form-select" name="custom_field_type_${customFieldCounter}" onchange="handleFieldTypeChange(this, '${fieldId}')" style="border: 2px solid #17a2b8; background: rgba(255, 255, 255, 0.9);">
                                ${fieldTypeOptions}
                            </select>
                            <label><i class="fas fa-cogs me-1"></i>Field Type</label>
                        </div>
                    </div>
                    
                    <div class="col-12 mb-3">
                        <div class="form-floating">
                            <input type="text" class="form-control" name="custom_field_placeholder_${customFieldCounter}" placeholder="Enter placeholder text..." style="border: 2px solid #6c757d; background: rgba(255, 255, 255, 0.9);">
                            <label><i class="fas fa-comment-dots me-1"></i>Placeholder Text (Optional)</label>
                        </div>
                    </div>
                    
                    <div class="col-12">
                        <div class="card" style="background: rgba(255, 255, 255, 0.7); border: 1px solid #dee2e6; border-radius: 10px;">
                            <div class="card-header py-2" style="background: rgba(23, 162, 184, 0.1); border-bottom: 1px solid #dee2e6;">
                                <small class="text-muted"><i class="fas fa-eye me-1"></i>Live Preview:</small>
                            </div>
                            <div class="card-body" id="preview-content-${fieldId}">
                                <div class="form-floating">
                                    <input type="text" class="form-control" placeholder="Enter ${cleanFieldName.toLowerCase()}" disabled>
                                    <label>${cleanFieldName}</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Hidden field to store the actual form field -->
                    <div class="col-12 mt-3" id="actual-field-${fieldId}">
                        <div class="form-floating">
                            <input type="text" class="form-control" name="custom_${cleanFieldName.toLowerCase().replace(/\s+/g, '_')}_${customFieldCounter}" placeholder="Enter ${cleanFieldName.toLowerCase()}">
                            <label>${cleanFieldName}</label>
                        </div>
                    </div>
                </div>
            `;

            container.insertAdjacentHTML('beforeend', fieldHtml);
            console.log('Added custom form field:', fieldId);

            // Show success message
            showToast(`Custom field "${cleanFieldName}" added successfully!`, 'success');
            
            // Auto-focus on the field label input for editing
            setTimeout(() => {
                const labelInput = document.querySelector(`#${fieldId} input[name^="custom_field_label"]`);
                if (labelInput) {
                    labelInput.focus();
                    labelInput.select();
                }
            }, 100);
        }

        function removeCustomFormField(fieldId) {
            const field = document.getElementById(fieldId);
            if (field) {
                field.remove();
                console.log('Removed custom form field:', fieldId);
                showToast('Custom form field removed!', 'info');
            }
        }

        function handleFieldTypeChange(selectElement, fieldId) {
            const selectedType = selectElement.value;
            const previewContainer = document.getElementById('preview-content-' + fieldId);
            const labelInput = selectElement.closest('.custom-form-field').querySelector('input[name^="custom_field_label"]');
            const placeholderInput = selectElement.closest('.custom-form-field').querySelector('input[name^="custom_field_placeholder"]');
            
            const label = labelInput.value || 'New Field';
            const placeholder = placeholderInput.value || 'Enter ' + label.toLowerCase();

            let previewHTML = '';
            
            switch(selectedType) {
                case 'textarea':
                    previewHTML = `
                        <div class="form-floating">
                            <textarea class="form-control" placeholder="${placeholder}" disabled style="height: 80px;"></textarea>
                            <label>${label}</label>
                        </div>
                    `;
                    break;
                case 'select':
                    previewHTML = `
                        <div class="form-floating">
                            <select class="form-select" disabled>
                                <option>Option 1</option>
                                <option>Option 2</option>
                                <option>Option 3</option>
                            </select>
                            <label>${label}</label>
                        </div>
                    `;
                    break;
                case 'date':
                    previewHTML = `
                        <div class="form-floating">
                            <input type="date" class="form-control" disabled>
                            <label>${label}</label>
                        </div>
                    `;
                    break;
                default:
                    previewHTML = `
                        <div class="form-floating">
                            <input type="${selectedType}" class="form-control" placeholder="${placeholder}" disabled>
                            <label>${label}</label>
                        </div>
                    `;
            }
            
            previewContainer.innerHTML = previewHTML;
            
            // Update preview when label changes
            labelInput.addEventListener('input', function() {
                const newLabel = this.value || 'New Field';
                const labelElement = previewContainer.querySelector('label');
                if (labelElement) {
                    labelElement.textContent = newLabel;
                }
            });
        }

        // Package price update function
        function updatePackagePrice(modalId) {
            const packageSelect = document.getElementById('selected_package_' + modalId);
            const packagePriceInput = document.getElementById('package_price_' + modalId);
            
            if (packageSelect && packagePriceInput) {
                const selectedOption = packageSelect.options[packageSelect.selectedIndex];
                const price = selectedOption.getAttribute('data-price') || 0;
                
                packagePriceInput.value = price;
                
                if (price > 0) {
                    showToast(`Package price updated to Rs${price}`, 'success');
                } else {
                    showToast('Package deselected', 'info');
                }
                
                // Trigger grand total recalculation
                calculateGrandTotal(modalId);
            }
        }

        console.log('Dynamic pricing system loaded successfully!');
    </script>
</body>
</html>