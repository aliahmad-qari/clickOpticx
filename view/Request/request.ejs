<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Admin Package Request</title>
  <!-- plugins:css -->
  <link rel="stylesheet" href="vendors/feather/feather.css">
  <link rel="stylesheet" href="vendors/ti-icons/css/themify-icons.css">
  <link rel="stylesheet" href="vendors/css/vendor.bundle.base.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <!-- Plugin css for this page -->
  <link rel="stylesheet" href="vendors/datatables.net-bs4/dataTables.bootstrap4.css">
  <link rel="stylesheet" type="text/css" href="js/select.dataTables.min.css">
  <!-- inject:css -->
  <link rel="stylesheet" href="css/vertical-layout-light/style.css">
  <!-- endinject -->
  <link rel="shortcut icon" href="images/favicon.png" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

  <!-- Material Design Icons CSS -->
  <link href="https://cdn.jsdelivr.net/npm/@mdi/font@7.2.96/css/materialdesignicons.min.css" rel="stylesheet">
  <!-- Font Awesome for icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <style>
    :root {
      --primary: #6c5ce7;
      --primary-light: #a29bfe;
      --success: #00b894;
      --warning: #fdcb6e;
      --danger: #d63031;
      --dark: #2d3436;
      --light: #f5f6fa;
      --gray: #dfe6e9;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Poppins', sans-serif;
    }

    body {
      background: var(--light);
      color: var(--dark);
    }

    /* ===== PROFESSIONAL MODAL STYLING ===== */
    .modal-content {
      border-radius: 15px !important;
      box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1) !important;
      border: 1px solid rgba(0, 0, 0, 0.1) !important;
      overflow: hidden;
    }

    .modal-header {
      position: relative;
      border-radius: 15px 15px 0 0 !important;
    }

    /* Professional Red Close Button */
    .btn-close-professional:hover {
      background: #c82333 !important;
      transform: scale(1.1);
      box-shadow: 0 4px 8px rgba(220, 53, 69, 0.4);
    }

    .btn-close-professional:active {
      transform: scale(0.95);
    }

    /* Modal backdrop improvements */
    .modal-backdrop.show {
      opacity: 0.6 !important;
      background: rgba(0, 0, 0, 0.6) !important;
    }

    /* Professional form styling enhancements */
    .modal-content {
      transition: transform 0.3s ease;
    }

    .modal.show .modal-content {
      transform: scale(1);
      animation: modalSlideIn 0.3s ease-out;
    }

    @keyframes modalSlideIn {
      from {
        transform: translateY(-50px);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .container-fluid.page-body-wrapper {
      display: flex;
      flex-direction: row;
    }

    .main-panel {
      flex-grow: 1;
      padding: 20px;
      transition: margin-left 0.3s ease;
    }

    @media (max-width: 991px) {
      .main-panel {
        margin-left: 0;
      }
    }

    .card {
      background: #ffffff;
      border-radius: 12px;
      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
      overflow: hidden;
      margin-bottom: 30px;
      animation: slideUp 0.8s ease forwards;
    }

    @keyframes slideUp {
      from {
        opacity: 0;
        transform: translateY(50px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .card-header {
      background: linear-gradient(90deg, var(--primary), var(--primary-light));
      color: white;
      padding: 20px 25px;
      font-size: 1.4rem;
      font-weight: 600;
      display: flex;
      justify-content: center;
      align-items: center;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      position: relative;
      overflow: hidden;
    }

    .card-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      animation: shine 2s infinite;
    }

    @keyframes shine {
      0% {
        left: -100%;
      }

      100% {
        left: 100%;
      }
    }

    .card-body {
      padding: 25px;
    }

    .alert {
      padding: 15px 20px;
      border-radius: 8px;
      margin-bottom: 25px;
      display: flex;
      align-items: center;
      font-size: 0.95rem;
    }

    .alert-success {
      background-color: rgba(52, 168, 83, 0.1);
      color: #155724;
      border-left: 4px solid #34a853;
    }

    .alert-danger {
      background-color: rgba(234, 67, 53, 0.1);
      color: #721c24;
      border-left: 4px solid #ea4335;
    }

    .toolbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
      flex-wrap: wrap;
      gap: 15px;
    }

    .search-box {
      position: relative;
      max-width: 500px;
      flex: 1;
    }

    .search-box i {
      position: absolute;
      left: 15px;
      top: 50%;
      transform: translateY(-50%);
      color: #9e9e9e;
    }

    .search-input {
      width: 100%;
      padding: 12px 15px 12px 45px;
      border: 1px solid #e0e0e0;
      border-radius: 8px;
      font-size: 0.95rem;
      background-color: #f9f9f9;
      transition: all 0.3s ease;
    }

    .search-input:focus {
      outline: none;
      border-color: var(--primary);
      background-color: white;
      box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.1);
    }

    .btn-add {
      background: linear-gradient(135deg, #1a73e8, #4285f4);
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 8px;
      font-size: 0.95rem;
      font-weight: 500;
      display: flex;
      align-items: center;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 2px 8px rgba(26, 115, 232, 0.2);
    }

    .btn-add:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(203, 204, 206, 0.3);
    }

    .table-responsive {
      overflow-x: auto;
      border-radius: 10px;
      background: white;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .equipment-table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
      min-width: 800px;
    }

    .equipment-table th {
      background-color: #f5f8ff;
      color: var(--primary);
      font-weight: 600;
      padding: 16px 20px;
      text-align: left;
      border-bottom: 1px solid #e0e0e0;
    }

    .equipment-table td {
      padding: 14px 20px;
      border-bottom: 1px solid #f0f0f0;
      vertical-align: middle;
    }

    .equipment-table tr:hover {
      background-color: #f9fbff;
    }

    .category-badge {
      display: inline-block;
      padding: 5px 12px;
      border-radius: 20px;
      font-size: 0.85rem;
      background-color: #e8f0fe;
      color: #1a73e8;
      font-weight: 500;
    }

    .quantity-display {
      position: relative;
      width: 80px;
    }

    .quantity-value {
      position: relative;
      z-index: 2;
      font-weight: 500;
    }

    .quantity-bar {
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      background-color: rgba(66, 133, 244, 0.1);
      border-radius: 4px;
      z-index: 1;
      transition: width 0.5s ease;
    }

    .action-buttons {
      display: flex;
      gap: 8px;
    }

    .btn-action {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      border: none;
      background-color: transparent;
      color: #5f6368;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .btn-action:hover {
      background-color: #f1f3f4;
      color: var(--primary);
    }

    .btn-action.edit:hover {
      background-color: #fff8e1;
      color: #f9ab00;
    }

    .modal {
      z-index: 1055;
    }

    .modal-backdrop {
      z-index: 1050;
      background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-backdrop.show {
      opacity: 0.5;
    }

    .form-card {
      background: rgba(255, 255, 255, 0.9);
      border-radius: 20px;
      padding: 10px 17px;
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.3);
      animation: slideUp 0.8s ease forwards;
      max-width: 700px;
      margin: 0 auto;
    }

    .form-header {
      background: linear-gradient(90deg, var(--primary), var(--primary-light));
      color: white;
      padding: 12px;
      border-radius: 15px;
      text-align: center;
      margin-bottom: 30px;
      font-size: 23px;
      font-weight: 600;
      position: relative;
      overflow: hidden;
    }

    .form-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      animation: shine 2s infinite;
    }

    .form-group {
      position: relative;
      margin-bottom: 30px;
    }

    .form-control,
    .form-select {
      width: 100%;
      border: 2px solid #6c8ce6;
      border-bottom: 2px solid var(--gray);
      background: transparent;
      padding: 12px 0;
      font-size: 1rem;
      color: var(--dark);
      transition: all 0.3s ease;
    }

    .form-control:focus,
    .form-select:focus {
      border-bottom-color: var(--primary);
      outline: none;
    }

    .form-label {
      position: absolute;
      top: 12px;
      left: 0;
      font-weight: 500;
      color: black;
      pointer-events: none;
      transition: all 0.3s ease;
    }

    .form-control:focus~.form-label,
    .form-control:not(:placeholder-shown)~.form-label,
    .form-select:focus~.form-label,
    .form-select:not([value=""])~.form-label {
      top: -20px;
      left: 0;
      font-size: 0.85rem;
      color: var(--primary);
    }

    .form-control:focus~.form-label::after,
    .form-control:not(:placeholder-shown)~.form-label::after,
    .form-select:focus~.form-label::after,
    .form-select:not([value=""])~.form-label::after {
      content: '*';
      color: var(--danger);
      margin-left: 5px;
    }

    .form-select option {
      background: var(--light);
      color: var(--dark);
    }

    .btn-success {
      background: linear-gradient(90deg, var(--success), var(--success));
      border: none;
      padding: 15px;
      border-radius: 50px;
      font-weight: 600;
      color: white;
      width: 100%;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .btn-success:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 20px rgba(108, 92, 231, 0.3);
    }

    .btn-success::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      animation: shine 2s infinite;
    }

    .form-icon {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      color: var(--gray);
      transition: color 0.3s ease;
    }

    .form-control:focus~.form-icon,
    .form-select:focus~.form-icon {
      color: var(--primary);
    }

    .table-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 20px;
      padding: 15px 10px;
      font-size: 0.9rem;
      color: #5f6368;
    }

    .showing-entries {
      color: #5f6368;
    }

    .pagination {
      display: flex;
      gap: 5px;
    }

    .page-btn {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      border: 1px solid #e0e0e0;
      background-color: white;
      color: #5f6368;
      cursor: pointer;
      transition: all 0.2s ease;
      text-decoration: none;
    }

    .page-btn:hover {
      background-color: #f1f3f4;
    }

    .page-btn.active {
      background-color: #1a73e8;
      color: white;
      border-color: #1a73e8;
    }

    .page-btn.disabled {
      opacity: 0.5;
      cursor: not-allowed;
      pointer-events: none;
    }

    /* Payment Type Styling */
    .payment-type-info {
      min-width: 200px;
    }

    .payment-type-badge {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.25rem 0.75rem;
      border-radius: 1rem;
      font-size: 0.875rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
    }

    .payment-type-badge.home-collection {
      background: linear-gradient(45deg, rgba(13, 110, 253, 0.15), rgba(13, 110, 253, 0.05));
      color: #0d6efd;
      border: 1px solid rgba(13, 110, 253, 0.3);
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      box-shadow: 0 2px 4px rgba(13, 110, 253, 0.1);
    }

    .payment-type-badge.online {
      background: linear-gradient(45deg, rgba(25, 135, 84, 0.15), rgba(25, 135, 84, 0.05));
      color: #198754;
      border: 1px solid rgba(25, 135, 84, 0.3);
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      box-shadow: 0 2px 4px rgba(25, 135, 84, 0.1);
    }

    .payment-type-info .text-muted {
      font-size: 0.75rem;
      line-height: 1.4;
      padding: 2px 6px;
      background-color: rgba(0, 0, 0, 0.03);
      border-radius: 4px;
      margin-top: 3px;
    }

    .home-collection-details {
      background-color: rgba(13, 110, 253, 0.02);
      border: 1px solid rgba(13, 110, 253, 0.1);
      border-radius: 8px;
      padding: 8px;
      margin-top: 8px;
    }

    .detail-item {
      display: flex;
      align-items: center;
      margin-bottom: 3px;
      font-size: 0.75rem;
    }

    .detail-item:last-child {
      margin-bottom: 0;
    }

    .detail-icon {
      margin-right: 6px;
      width: 16px;
      text-align: center;
    }

    /* Filter Buttons */
    .filter-buttons {
      flex-shrink: 0;
    }

    .filter-btn {
      border-radius: 20px;
      padding: 6px 12px;
      font-size: 0.8rem;
      font-weight: 500;
      transition: all 0.3s ease;
    }

    .filter-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .filter-btn.active {
      transform: scale(1.05);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    /* Responsive toolbar */
    @media (max-width: 768px) {
      .toolbar {
        flex-direction: column;
        gap: 10px;
      }
      
      .filter-buttons {
        justify-content: center;
        width: 100%;
      }
      
      .search-box {
        max-width: 100%;
      }
    }
  </style>
</head>

<body>
  <div class="container-scroller">
    <%- include ('../partials/_navbar.ejs') %>
      <div class="container-fluid page-body-wrapper">
        <%- include ('../partials/SettingsDow.ejs') %>
          <%- include ('../partials/Sidebar.ejs') %>
            <div class="main-panel">
              <% if (messages.success) { %>
                <div class="position-relative" style="z-index: 1055;">
                  <div class="d-flex justify-content-end position-absolute w-100"
                    style="top: 10px; right: 0; z-index: 1055;">
                    <div id="pusher-message-box" class="alert alert-success alert-dismissible fade show mt-3"
                      role="alert" style="color: white;">
                      <strong>Success:</strong>
                      <%= messages.success %>
                    </div>
                  </div>
                </div>
                <% } %>
                  <div class="content-wrapper">
                    <div class="card">
                      <div class="card-header"> Package Request
                        <div class="header-actions"></div>
                      </div>
                      <div class="card-body">
                        <div class="toolbar">
                          <div class="search-box">
                            <i class="fas fa-search"></i>
                            <form class="d-flex ms-auto w-100" id="search-form" onsubmit="return false;">
                              <input class="search-input" type="search" id="search-input" placeholder="Search by username, ID, or transaction ID...">
                            </form>
                          </div>
                          <div class="filter-buttons" style="display: flex; gap: 10px; margin-left: 15px;">
                            <button class="btn btn-outline-primary btn-sm filter-btn active" data-filter="all">
                              <i class="fas fa-list"></i> All
                            </button>
                            <button class="btn btn-outline-info btn-sm filter-btn" data-filter="home">
                              <i class="fas fa-home"></i> Home Collection
                            </button>
                            <button class="btn btn-outline-success btn-sm filter-btn" data-filter="online">
                              <i class="fas fa-credit-card"></i> Online
                            </button>
                            <button class="btn btn-outline-warning btn-sm" onclick="debugFilters()" title="Debug Filters">
                              <i class="fas fa-bug"></i> Debug
                            </button>
                          </div>
                        </div>
                        <div class="table-responsive">
                          <table class="equipment-table">
                            <thead>
                              <tr>
                                <th>Username</th>
                                <th>ID #</th>
                                <th>Transaction ID</th>
                                <th>Amount</th>
                                <th>Package</th>
                                <th><i class="fas fa-truck"></i> Delivery Method</th>
                                <th>Coins</th>
                                <th>Remaining</th>
                                <th>Date</th>
                                <th>Action</th>
                              </tr>
                            </thead>
                            <tbody id="payment-table">
                              <% if (payments.length> 0) { %>
                                <% payments.sort((a, b)=> b.id - a.id); %>
                                <% console.log('🔍 Debug - Total payments:', payments.length); %>
                                <% let homeCollectionCount = 0; %>
                                <% let onlinePaymentCount = 0; %>
                                <% payments.forEach((payment, paymentIndex) => { 
                                  if (payment.home_collection === 1) homeCollectionCount++;
                                  else onlinePaymentCount++;
                                  
                                  if (paymentIndex < 3) {
                                    console.log(`🔍 Debug Payment ${paymentIndex}:`, {
                                      id: payment.id,
                                      username: payment.username,
                                      home_collection: payment.home_collection,
                                      collection_address: payment.collection_address,
                                      contact_number: payment.contact_number
                                    });
                                  }
                                %>
                                    <tr>
                                      <td>
                                        <%= payment.username %>
                                      </td>
                                      <td>
                                        <%= payment.user_id %>
                                      </td>
                                      <td>
                                        <%= payment.transaction_id %>
                                      </td>
                                      <td>
                                        <%= payment.amount %>
                                      </td>
                                      <td><span class="category-badge">
                                          <%= payment.package_name %> MB
                                        </span></td>
                                      <td>
                                        <% if (payment.home_collection === 1) { %>
                                          <div class="payment-type-info">
                                            <div class="payment-type-badge home-collection">
                                              <i class="fas fa-home"></i> Home Collection
                                            </div>
                                            <!-- Debug: Show what data is available -->
                                            <% if (process.env.NODE_ENV !== 'production') { %>
                                              <small class="text-muted d-block" style="font-size: 0.7rem;">
                                                Debug: collection_address=<%= payment.collection_address || 'null' %>, 
                                                contact_number=<%= payment.contact_number || 'null' %>, 
                                                user_address=<%= payment.user_address || 'null' %>, 
                                                user_phone=<%= payment.user_phone || 'null' %>
                                              </small>
                                            <% } %>
                                            <div class="home-collection-details">
                                              <% if (payment.collection_address) { %>
                                                <div class="detail-item">
                                                  <span class="detail-icon">📍</span>
                                                  <strong>Collection Address:</strong>&nbsp;<%= payment.collection_address %>
                                                </div>
                                              <% } else if (payment.user_address) { %>
                                                <div class="detail-item">
                                                  <span class="detail-icon">🏠</span>
                                                  <strong>User Address:</strong>&nbsp;<%= payment.user_address %>
                                                </div>
                                              <% } %>
                                              
                                              <% if (payment.contact_number) { %>
                                                <div class="detail-item">
                                                  <span class="detail-icon">📞</span>
                                                  <strong>Collection Contact:</strong>&nbsp;<%= payment.contact_number %>
                                                </div>
                                              <% } else if (payment.user_phone) { %>
                                                <div class="detail-item">
                                                  <span class="detail-icon">📱</span>
                                                  <strong>User Phone:</strong>&nbsp;<%= payment.user_phone %>
                                                </div>
                                              <% } %>
                                              
                                              <% if (payment.preferred_time) { %>
                                                <div class="detail-item">
                                                  <span class="detail-icon">🕒</span>
                                                  <strong>Preferred Time:</strong>&nbsp;<%= payment.preferred_time %>
                                                </div>
                                              <% } %>
                                              
                                              <% if (payment.special_instructions) { %>
                                                <div class="detail-item">
                                                  <span class="detail-icon">📝</span>
                                                  <strong>Special Notes:</strong>&nbsp;<%= payment.special_instructions %>
                                                </div>
                                              <% } %>
                                              
                                              <!-- Always show user info for home collection -->
                                              <div class="detail-item">
                                                <span class="detail-icon">👤</span>
                                                <strong>Customer:</strong>&nbsp;<%= payment.username %>
                                              </div>
                                              
                                              <% if (!payment.collection_address && !payment.contact_number && !payment.preferred_time && !payment.special_instructions && !payment.user_address && !payment.user_phone) { %>
                                                <div class="detail-item text-warning">
                                                  <span class="detail-icon">⚠️</span>
                                                  <strong>No contact details available</strong>
                                                </div>
                                              <% } %>
                                            </div>
                                          </div>
                                        <% } else { %>
                                          <div class="payment-type-badge online">
                                            <i class="fas fa-credit-card"></i> Online Payment
                                          </div>
                                        <% } %>
                                      </td>
                                      <td>
                                        <%= payment.coin_balance || 0 %>
                                      </td>
                                      <td>
                                        <div class="quantity-display">
                                          <div class="quantity-value">
                                            <%= payment.remaining_amount %>
                                          </div>
                                          <div class="quantity-bar"
                                            style="width: <%= (payment.remaining_amount / payment.amount * 100) %>%">
                                          </div>
                                        </div>
                                      </td>
                                      <td>
                                        <%= payment.created_at.toLocaleDateString() %>

                                      </td>
                                      <td class="action-buttons">
                                        <form action="/send-respit" method="POST">
                                          <input type="hidden" name="user_id" value="<%= payment.user_id %>">
                                          <input type="hidden" name="username" value="<%= payment.username %>">
                                          <input type="hidden" name="transaction_id" value="Package">
                                          <input type="hidden" name="amount" value="<%= payment.amount %>">
                                          <input type="hidden" name="package_name" value="<%= payment.package_name %>">
                                          <input type="hidden" name="coins" value="<%= payment.coin_balance || 0 %>">
                                          <input type="hidden" name="discount" value="<%= payment.discount %>">
                                          <input type="hidden" name="Accepted" value="Accepted">
                                          <input type="hidden" name="custom_amount"
                                            value="<%= payment.custom_amount %>">
                                          <input type="hidden" name="remaining_amount"
                                            value="<%= payment.remaining_amount %>">
                                          <input type="hidden" name="home_collection" 
                                            value="<%= payment.home_collection || 0 %>">
                                          <input type="hidden" name="collection_address" 
                                            value="<%= payment.collection_address || '' %>">
                                          <input type="hidden" name="contact_number" 
                                            value="<%= payment.contact_number || '' %>">
                                          <input type="hidden" name="preferred_time" 
                                            value="<%= payment.preferred_time || '' %>">
                                          <input type="hidden" name="special_instructions" 
                                            value="<%= payment.special_instructions || '' %>">
                                          <button type="submit" class="btn-action" title="Send Receipt"><i
                                              style="color:#1a73e8;" class="fas fa-receipt"></i></button>
                                        </form>
<button class="btn btn-sm btn-warning edit"
        data-userid="<%= payment.user_id %>"
        data-username="<%= payment.Username %>"
        data-transactionid="<%= payment.transaction_id %>"
        data-packagename="<%= payment.package_name %>"
        data-invoice="<%= payment.invoice_status %>"
        data-status="<%= payment.package_status %>"
        data-expiry="<%= payment.expiry ? new Date(payment.expiry).toISOString().split('T')[0] : '' %>"
        data-toggle="modal"
        data-target="#editModal">
  Edit
</button>




                                        <form action="/request/<%= payment.id %>?_method=DELETE" method="POST"
                                          style="display:inline;">
                                          <input type="hidden" name="_method" value="DELETE">
                                          <button type="submit" class="btn-action" title="Delete">
                                            <i class="bi bi-trash text-danger"></i>
                                          </button>
                                        </form>
                                      </td>
                                    </tr>
                                    <% }); %>
                                    <% console.log('🔍 Debug Summary:', {
                                      totalPayments: payments.length,
                                      homeCollectionCount: homeCollectionCount,
                                      onlinePaymentCount: onlinePaymentCount
                                    }); %>
                                      <% } else { %>
                                        <tr class="no-data">
                                          <td colspan="9" class="text-center">No payment records found.</td>
                                        </tr>
                                        <% } %>
                            </tbody>
                          </table>
                        </div>
                        <div class="table-footer">
                          <div class="showing-entries">Showing <span id="entry-count">
                              <%= payments.length %>
                            </span> entries</div>
                          <div class="pagination">
                            <a class="page-btn disabled" href="#">«</a>
                            <a class="page-btn active" href="#">1</a>
                            <a class="page-btn" href="#">2</a>
                            <a class="page-btn" href="#">»</a>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>

                  <!-- Update Modal -->
 <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content" style="margin-top: -145px;">
      <div class="modal-header d-flex justify-content-between" style="position: relative; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 15px 15px 0 0;">
        <h4 class="modal-title" id="myModalLabel">Edit User Packages <i class="ti-user"></i></h4>
        <!-- Professional Red Close Button -->
        <button type="button" class="btn-close-professional" data-dismiss="modal" aria-label="Close"
          style="position: absolute; top: 15px; right: 15px; width: 32px; height: 32px; background: #dc3545; color: white; border: none; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 16px; font-weight: bold; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(220, 53, 69, 0.3); z-index: 1060;">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <form action="/update-plan" method="POST">
  <input type="hidden" name="user_id" id="user_id">
  <input type="hidden" name="transaction_id" id="TransactionId">
  <input type="hidden" name="package_name" id="PreviousPackage">

  <div class="form-group col-md-6">
    <label for="invoice_status">Invoice Status</label>
    <select class="form-control" id="invoice_status" name="invoice_status" required>
      <option value="Paid">Paid</option>
      <option value="Unpaid">Unpaid</option>
    </select>
  </div>

  <div class="form-group col-md-6">
    <label for="package_status">Package Status</label>
    <select class="form-control" id="package_status" name="package_status" required>
      <option value="Active">Active</option>
      <option value="Pending">Pending</option>
      <option value="Expired">Expired</option>
    </select>
  </div>

  <div class="form-group col-md-6">
    <label for="expiry">Expiry Date</label>
    <input type="date" class="form-control" id="expiry" name="expiry" required> <!-- Change "Expiry" to "expiry" -->
  </div>

  <div class="modal-footer">
    <button type="submit" class="btn btn-primary">Update Plan</button>
  </div>
</form>

    </div>
  </div>
</div>





                  <!-- Edit Equipment Modal (Retained as is) -->
                  <div class="modal fade" id="editEquipmentModal" tabindex="-1"
                    aria-labelledby="editEquipmentModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                      <div class="modal-content form-card">
                        <div class="form-header">
                          <h5 class="modal-title" id="editEquipmentModalLabel">Edit Equipment</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                          <form action="/updateEquipment" method="POST" enctype="multipart/form-data">
                            <input type="hidden" name="id" id="edit-id">
                            <div class="form-group">
                              <select name="type" id="edit-type" class="form-select" required>
                                <option value="fibre">Fibre</option>
                                <option value="wireless">Wireless</option>
                              </select>
                              <label for="edit-type" class="form-label">Type</label>
                              <i class="fas fa-chevron-down form-icon"></i>
                            </div>
                            <div class="form-group">
                              <input type="text" name="name" id="edit-name" class="form-control" placeholder=" "
                                required>
                              <label for="edit-name" class="form-label">Equipment Name</label>
                              <i class="fas fa-tag form-icon"></i>
                            </div>
                            <div class="form-group">
                              <input type="text" name="quantity" id="edit-quantity" class="form-control" placeholder=" "
                                required>
                              <label for="edit-quantity" class="form-label">Quantity</label>
                              <i class="fas fa-box form-icon"></i>
                            </div>
                            <div class="form-group">
                              <input type="text" name="category" id="edit-category" class="form-control" placeholder=" "
                                readonly>
                              <label for="edit-category" class="form-label">Category</label>
                              <i class="fas fa-list form-icon"></i>
                            </div>
                            <div class="form-group">
                              <label for="edit-image" class="form-label">Image (optional)</label>
                              <input type="file" name="image" id="edit-image" class="form-file" accept="image/*">
                              <div id="current-image-container" class="mt-2">
                                <img id="current-image" class="equipment-image" alt="Current Equipment Image">
                              </div>
                            </div>
                            <button type="submit" class="btn-success">
                              <i class="fas fa-save mr-2"></i> Update Equipment
                            </button>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>
            </div>
      </div>
  </div>

  <!-- plugins:js -->
  <!-- jQuery and Bootstrap (jQuery should come before Bootstrap!) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

<!-- Vendor JS -->
<script src="vendors/js/vendor.bundle.base.js"></script>
<script src="vendors/chart.js/Chart.min.js"></script>
<script src="vendors/datatables.net/jquery.dataTables.js"></script>
<script src="vendors/datatables.net-bs4/dataTables.bootstrap4.js"></script>
<script src="js/dataTables.select.min.js"></script>

<!-- Core UI Scripts -->
<script src="js/off-canvas.js"></script>
<script src="js/hoverable-collapse.js"></script>
<script src="js/template.js"></script>
<script src="js/settings.js"></script>

<!-- Custom Dashboard Scripts -->
<script src="js/dashboard.js"></script>
<script src="js/Chart.roundedBarCharts.js"></script>

<!-- Custom Script -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // 🔔 Auto-dismiss flash message
    const msgBox = document.getElementById('pusher-message-box');
    if (msgBox) {
      setTimeout(() => {
        msgBox.style.transition = "opacity 0.5s";
        msgBox.style.opacity = 0;
        setTimeout(() => msgBox.style.display = "none", 500);
      }, 4000);
    }

    // 🔍 Payment table live search and filtering
    const searchInput = document.getElementById('search-input');
    let currentFilter = 'all';
    
    function filterAndSearch() {
      const searchTerm = searchInput ? searchInput.value.toLowerCase() : '';
      const rows = document.querySelectorAll('#payment-table tr:not(.no-data)');
      let visibleCount = 0;
      
      console.log('🔍 Filter Debug:', {
        currentFilter: currentFilter,
        searchTerm: searchTerm,
        totalRows: rows.length
      });

      rows.forEach((row, index) => {
        if (!row.cells || row.cells.length < 6) {
          console.warn('Row', index, 'has insufficient cells:', row.cells?.length);
          return;
        }
        
        const username = row.cells[0]?.textContent?.toLowerCase() || '';
        const userId = row.cells[1]?.textContent?.toLowerCase() || '';
        const transactionId = row.cells[2]?.textContent?.toLowerCase() || '';
        const deliveryMethodCell = row.cells[5]; // The delivery method column
        
        // Check if row matches search term
        const searchMatches = searchTerm === '' || 
          username.includes(searchTerm) || 
          userId.includes(searchTerm) || 
          transactionId.includes(searchTerm);
        
        // Check if row matches filter with enhanced detection
        let filterMatches = true;
        if (currentFilter === 'home') {
          const hasHomeCollection = deliveryMethodCell?.querySelector('.home-collection') !== null ||
                                   deliveryMethodCell?.querySelector('.payment-type-badge.home-collection') !== null ||
                                   deliveryMethodCell?.textContent?.toLowerCase().includes('home collection') ||
                                   deliveryMethodCell?.innerHTML?.toLowerCase().includes('home collection');
          filterMatches = hasHomeCollection;
          
          // Debug specific row
          if (index < 3) {
            console.log('🏠 Home Collection Check Row', index, ':', {
              hasHomeCollection: hasHomeCollection,
              cellHTML: deliveryMethodCell?.innerHTML,
              cellText: deliveryMethodCell?.textContent,
              homeCollectionElement: deliveryMethodCell?.querySelector('.home-collection'),
              paymentTypeBadge: deliveryMethodCell?.querySelector('.payment-type-badge.home-collection')
            });
          }
        } else if (currentFilter === 'online') {
          const hasOnlinePayment = deliveryMethodCell?.querySelector('.online') !== null ||
                                  deliveryMethodCell?.querySelector('.payment-type-badge.online') !== null ||
                                  deliveryMethodCell?.textContent?.toLowerCase().includes('online payment') ||
                                  deliveryMethodCell?.innerHTML?.toLowerCase().includes('online payment');
          filterMatches = hasOnlinePayment;
        }
        
        const shouldShow = searchMatches && filterMatches;
        row.style.display = shouldShow ? '' : 'none';
        if (shouldShow) visibleCount++;
      });

      console.log('🔍 Filter Results:', {
        visibleCount: visibleCount,
        currentFilter: currentFilter
      });

      const noDataRow = document.querySelector('#payment-table tr.no-data');
      if (noDataRow) {
        noDataRow.style.display = visibleCount === 0 ? '' : 'none';
      }

      const entryCount = document.getElementById('entry-count');
      if (entryCount) entryCount.textContent = visibleCount;
    }
    
    searchInput?.addEventListener('input', filterAndSearch);

    // 🎛️ Filter buttons functionality
    document.querySelectorAll('.filter-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        console.log('🎛️ Filter Button Clicked:', {
          buttonText: this.textContent.trim(),
          filterValue: this.dataset.filter,
          previousFilter: currentFilter
        });
        
        // Remove active class from all buttons
        document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
        
        // Add active class to clicked button
        this.classList.add('active');
        
        // Update current filter
        currentFilter = this.dataset.filter;
        
        console.log('🎛️ Filter Updated to:', currentFilter);
        
        // Apply filter
        filterAndSearch();
      });
    });
    
    // Initialize filters on page load
    console.log('🎛️ Initializing Filters...');
    const filterButtons = document.querySelectorAll('.filter-btn');
    console.log('🎛️ Found filter buttons:', filterButtons.length);
    
    filterButtons.forEach((btn, index) => {
      console.log(`🎛️ Filter Button ${index}:`, {
        text: btn.textContent.trim(),
        dataFilter: btn.dataset.filter,
        classes: btn.className
      });
    });
    
    // Debug current table state
    const allRows = document.querySelectorAll('#payment-table tr');
    console.log('🔍 Current Table State:', {
      totalRows: allRows.length,
      nonHeaderRows: allRows.length - 1 // excluding potential header
    });
    
    allRows.forEach((row, index) => {
      if (row.cells && row.cells.length > 5 && index < 5) { // Log first 5 rows
        const deliveryCell = row.cells[5];
        console.log(`🔍 Row ${index} Delivery Cell:`, {
          textContent: deliveryCell?.textContent?.trim(),
          innerHTML: deliveryCell?.innerHTML,
          hasHomeCollection: deliveryCell?.querySelector('.home-collection') !== null,
          hasOnline: deliveryCell?.querySelector('.online') !== null
        });
      }
    });
    
    // Run initial filter to see what happens
    setTimeout(() => {
      console.log('🔍 Running initial filter check...');
      filterAndSearch();
    }, 1000);
    
    // Global debug function
    window.debugFilters = function() {
      console.log('🐛 === DEBUG FILTER ANALYSIS ===');
      
      const rows = document.querySelectorAll('#payment-table tr');
      let homeCount = 0;
      let onlineCount = 0;
      
      console.log('🐛 Total rows found:', rows.length);
      
      rows.forEach((row, index) => {
        if (row.cells && row.cells.length >= 6) {
          const deliveryCell = row.cells[5];
          const hasHome = deliveryCell?.innerHTML?.toLowerCase().includes('home collection') || 
                         deliveryCell?.querySelector('.home-collection') !== null;
          const hasOnline = deliveryCell?.innerHTML?.toLowerCase().includes('online payment') || 
                           deliveryCell?.querySelector('.online') !== null;
          
          if (hasHome) homeCount++;
          if (hasOnline) onlineCount++;
          
          console.log(`🐛 Row ${index}:`, {
            username: row.cells[0]?.textContent?.trim() || 'N/A',
            hasHome: hasHome,
            hasOnline: hasOnline,
            cellHTML: deliveryCell?.innerHTML,
            cellText: deliveryCell?.textContent?.trim()
          });
        }
      });
      
      console.log('🐛 Summary:', {
        homeCollectionRows: homeCount,
        onlinePaymentRows: onlineCount,
        currentFilter: currentFilter
      });
      
      // Test each filter
      ['all', 'home', 'online'].forEach(filter => {
        console.log(`🐛 Testing filter: ${filter}`);
        currentFilter = filter;
        filterAndSearch();
      });
      
      // Reset to all
      currentFilter = 'all';
      filterAndSearch();
      
      alert(`Debug complete! Check console for details.\nHome Collection: ${homeCount}\nOnline Payment: ${onlineCount}`);
    };

    // ✏️ Populate Edit Modal on button click
document.querySelectorAll(".edit").forEach(button => {
  button.addEventListener("click", function () {
    document.getElementById("user_id").value = this.dataset.userid || "";
    document.getElementById("TransactionId").value = this.dataset.transactionid || "";
    document.getElementById("PreviousPackage").value = this.dataset.packagename || "";

    const invoiceStatus = this.dataset.invoice || "";
    const packageStatus = this.dataset.status || "";
    const expiryDate = this.dataset.expiry || "";  // No default for expiryDate

    const invoiceDropdown = document.getElementById("invoice_status");
    const packageDropdown = document.getElementById("package_status");

    // ✅ Set invoice status safely (must match casing exactly)
    if (["Paid", "Unpaid"].includes(invoiceStatus)) {
      invoiceDropdown.value = invoiceStatus;
    } else {
      invoiceDropdown.value = "Unpaid"; // fallback
    }

    // ✅ Set package status safely (casing: "Active", "Pending", "Expired")
    if (["Active", "Pending", "Expired"].includes(packageStatus)) {
      packageDropdown.value = packageStatus;
    } else {
      packageDropdown.value = "Pending"; // fallback
    }

    // ✅ Set expiry date, no fallback, will leave it empty if no expiry
    document.getElementById("expiry").value = expiryDate;
  });
});

    });
  
</script>




</body>

</html>